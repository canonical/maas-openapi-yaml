info:
  version: 2.0.0
openapi: 3.0.0
paths:
  /account/op-create_authorisation_token:
    post:
      description: Create an authorisation OAuth token and OAuth consumer.
      operationId: AccountHandler_create_authorisation_token
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: Optional name of the token that will be generated.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: 'A JSON object containing: ``token_key``, ``token_secret``,
            ``consumer_key``, and ``name``.'
      summary: Create an authorisation token
      tags:
      - Logged-in user
  /account/op-delete_authorisation_token:
    post:
      description: Delete an authorisation OAuth token and the related OAuth consumer.
      operationId: AccountHandler_delete_authorisation_token
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                token_key:
                  description: The key of the token to be deleted.
                  type: string
              required:
              - token_key
              type: object
        required: true
      responses:
        '204':
          description: '204'
      summary: Delete an authorisation token
      tags:
      - Logged-in user
  /account/op-list_authorisation_tokens:
    get:
      description: List authorisation tokens available to the currently logged-in
        user.
      operationId: AccountHandler_list_authorisation_tokens
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of token objects.
      summary: List authorisation tokens
      tags:
      - Logged-in user
  /account/op-update_token_name:
    post:
      description: Modify the consumer name of an authorisation OAuth token.
      operationId: AccountHandler_update_token_name
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: New name of the token.
                  type: string
                token:
                  description: Can be the whole token or only the token key.
                  type: string
              required:
              - token
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Accepted
      summary: Modify authorisation token
      tags:
      - Logged-in user
  /account/prefs/sshkeys/:
    get:
      description: List all keys belonging to the requesting user.
      operationId: SSHKeysHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of available SSH keys.
      summary: List SSH keys
      tags:
      - SSH Keys
    post:
      description: Add a new SSH key to the requesting or supplied user's account.
      operationId: SSHKeysHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                key:
                  description: 'A public SSH key should be provided in the request
                    payload as form data with the name ''key'': ``key: "key-type public-key-data"``
                    - ``key-type``: ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521,
                    ssh-dss, ssh-ed25519, ssh-rsa - ``public key data``: Base64-encoded
                    key data.'
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new key.
      summary: Add a new SSH key
      tags:
      - SSH Keys
  /account/prefs/sshkeys/op-import:
    post:
      description: Import the requesting user's SSH keys for a given protocol and
        authorization ID in protocol:auth_id format.
      operationId: SSHKeysHandler_import
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                keysource:
                  description: 'The source of the keys to import should be provided
                    in the request payload as form data: E.g. ``source:user`` - ``source``:
                    lp (Launchpad), gh (GitHub) - ``user``: User login'
                  type: string
              required:
              - keysource
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of imported keys.
      summary: Import SSH keys
      tags:
      - SSH Keys
  /account/prefs/sshkeys/{id}/:
    delete:
      description: Deletes the SSH key with the given ID.
      operationId: SSHKeyHandler_delete
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The requesting user does not own the key.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested SSH key is not found.
      summary: Delete an SSH key
      tags:
      - SSH Key
    get:
      description: Retrieves an SSH key with the given ID.
      operationId: SSHKeyHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of imported keys.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested SSH key is not found.
      summary: Retrieve an SSH key
      tags:
      - SSH Key
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /account/prefs/sslkeys/:
    get:
      description: List all keys belonging to the requesting user.
      operationId: SSLKeysHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of SSL keys.
      summary: List keys
      tags:
      - SSL Keys
    post:
      description: Add a new SSL key to the requesting user's account.
      operationId: SSLKeysHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                key:
                  description: 'An SSL key should be provided in the request payload
                    as form data with the name ''key'': ``key: "key data"`` - ``key
                    data``: The contents of a pem file.'
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new key.
      summary: Add a new SSL key
      tags:
      - SSL Keys
  /account/prefs/sslkeys/{id}/:
    delete:
      description: Deletes the SSL key with the given ID.
      operationId: SSLKeyHandler_delete
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The requesting user does not own the key.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested SSH key is not found.
      summary: Delete an SSL key
      tags:
      - SSL Key
    get:
      description: Retrieves an SSL key with the given ID.
      operationId: SSLKeyHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of imported keys.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The requesting user does not own the key.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested SSH key is not found.
      summary: Retrieve an SSL key
      tags:
      - SSL Key
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /boot-resources/:
    get:
      description: List all boot resources
      operationId: BootResourcesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of boot resource objects.
      summary: List boot resources
      tags:
      - Boot resources
    post:
      description: Uploads a new boot resource.
      operationId: BootResourcesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                architecture:
                  description: Architecture the boot resource supports.
                  type: string
                base_image:
                  description: The Base OS image a custom image is built on top of.
                    Only required for custom image.
                  type: string
                content:
                  description: 'Image content. Note: this is not a normal parameter,
                    but an ``application/octet-stream`` file upload.'
                  type: string
                filetype:
                  description: 'Filetype for uploaded content. (Default: ``tgz``.
                    Supported: ``tgz``, ``tbz``, ``txz``, ``ddtgz``, ``ddtbz``, ``ddtxz``,
                    ``ddtar``, ``ddbz2``, ``ddgz``, ``ddxz``, ``ddraw``)'
                  type: string
                name:
                  description: Name of the boot resource.
                  type: string
                sha256:
                  description: The ``sha256`` hash of the resource.
                  type: string
                size:
                  description: The size of the resource in bytes.
                  type: string
                title:
                  description: Title for the boot resource.
                  type: string
              required:
              - name
              - architecture
              - sha256
              - size
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the uploaded resource.
      summary: Upload a new boot resource
      tags:
      - Boot resources
  /boot-resources/op-import:
    post:
      description: Import the boot resources.
      operationId: BootResourcesHandler_import
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Import of boot resources started
      summary: Import boot resources
      tags:
      - Boot resources
  /boot-resources/op-is_importing:
    get:
      description: Get the status of importing resources.
      operationId: BootResourcesHandler_is_importing
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: 'true'
      summary: Importing status
      tags:
      - Boot resources
  /boot-resources/op-stop_import:
    post:
      description: Stop import the boot resources.
      operationId: BootResourcesHandler_stop_import
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Import of boot resources is being stopped.
      summary: Stop import boot resources
      tags:
      - Boot resources
  /boot-resources/{id}/:
    delete:
      description: Delete a boot resource by id.
      operationId: BootResourceHandler_delete
      parameters:
      - description: The boot resource id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot resource is not found.
      summary: Delete a boot resource
      tags:
      - Boot resource
    get:
      description: Reads a boot resource by id
      operationId: BootResourceHandler_read
      parameters:
      - description: The boot resource id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested resource.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot resource is not found.
      summary: Read a boot resource
      tags:
      - Boot resource
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /boot-sources/:
    get:
      description: List all boot sources.
      operationId: BootSourcesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all available boot-source
            objects.
      summary: List boot sources
      tags:
      - Boot sources
    post:
      description: Create a new boot source. Note that in addition to ``url``, you
        must supply either ``keyring_data`` or ``keyring_filename``.
      operationId: BootSourcesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                keyring_data:
                  description: The GPG keyring for this BootSource, base64-encoded.
                  type: string
                keyring_filename:
                  description: The path to the keyring file for this BootSource.
                  type: string
                url:
                  description: The URL of the BootSource.
                  type: string
              required:
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new boot source.
      summary: Create a boot source
      tags:
      - Boot sources
  /boot-sources/{boot_source_id}/selections/:
    get:
      description: List all available boot-source selections.
      operationId: BootSourceSelectionsHandler_read
      parameters:
      - description: A boot-source id.
        in: path
        name: boot_source_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all available boot-source
            selections.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source is not found.
      summary: List boot-source selections
      tags:
      - Boot source selections
    parameters:
    - in: path
      name: boot_source_id
      required: true
      schema:
        type: string
    post:
      description: Create a new boot source selection.
      operationId: BootSourceSelectionsHandler_create
      parameters:
      - description: A boot-source id.
        in: path
        name: boot_source_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                arches:
                  description: The architecture list for which to import resources.
                  type: string
                labels:
                  description: The label lists for which to import resources.
                  type: string
                os:
                  description: The OS (e.g. ubuntu, centos) for which to import resources.
                  type: string
                release:
                  description: The release for which to import resources.
                  type: string
                subarches:
                  description: The subarchitecture list for which to import resources.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new boot-source selection.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source is not found.
      summary: Create a boot-source selection
      tags:
      - Boot source selections
  /boot-sources/{boot_source_id}/selections/{id}/:
    delete:
      description: Delete a boot source with the given id.
      operationId: BootSourceSelectionHandler_delete
      parameters:
      - description: A boot-source id.
        in: path
        name: boot_source_id
        required: true
        schema:
          type: string
      - description: A boot-source selection id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source or boot-source selection is not found.
      summary: Delete a boot source
      tags:
      - Boot source selection
    get:
      description: Read a boot source selection with the given id.
      operationId: BootSourceSelectionHandler_read
      parameters:
      - description: A boot-source id.
        in: path
        name: boot_source_id
        required: true
        schema:
          type: string
      - description: A boot-source selection id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested boot-source selection
            object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source or boot-source selection is not found.
      summary: Read a boot source selection
      tags:
      - Boot source selection
    parameters:
    - in: path
      name: boot_source_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a boot source selection with the given id.
      operationId: BootSourceSelectionHandler_update
      parameters:
      - description: A boot-source id.
        in: path
        name: boot_source_id
        required: true
        schema:
          type: string
      - description: A boot-source selection id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                arches:
                  description: The list of architectures for which to import resources.
                  type: string
                labels:
                  description: The list of labels for which to import resources.
                  type: string
                os:
                  description: The OS (e.g. ubuntu, centos) for which to import resources.
                  type: string
                release:
                  description: The release for which to import resources.
                  type: string
                subarches:
                  description: The list of sub-architectures for which to import resources.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested boot-source selection
            object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source or boot-source selection is not found.
      summary: Update a boot-source selection
      tags:
      - Boot source selection
  /boot-sources/{id}/:
    delete:
      description: Delete a boot source with the given id.
      operationId: BootSourceHandler_delete
      parameters:
      - description: A boot-source id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source is not found.
      summary: Delete a boot source
      tags:
      - Boot source
    get:
      description: Read a boot source with the given id.
      operationId: BootSourceHandler_read
      parameters:
      - description: A boot-source id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested boot-source object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source is not found.
      summary: Read a boot source
      tags:
      - Boot source
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a boot source with the given id.
      operationId: BootSourceHandler_update
      parameters:
      - description: A boot-source id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                keyring_data:
                  description: The GPG keyring for this BootSource, base64-encoded
                    data.
                  type: string
                keyring_filename:
                  description: The path to the keyring file for this BootSource.
                  type: string
                url:
                  description: The URL of the BootSource.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated boot-source object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested boot-source is not found.
      summary: Update a boot source
      tags:
      - Boot source
  /commissioning-scripts/:
    get:
      deprecated: true
      description: "Manage custom commissioning scripts.\n\n    This functionality\
        \ is only available to administrators.\n\nThe 'Commissioning-scripts' endpoint\
        \ has been deprecated in favour of 'Node-Scripts'."
      operationId: CommissioningScriptsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of script objects.
      summary: CommissioningScriptsHandler read
      tags:
      - Commissioning scripts (deprecated)
    post:
      deprecated: true
      description: "Manage custom commissioning scripts.\n\n    This functionality\
        \ is only available to administrators.\n\nThe 'Commissioning-scripts' endpoint\
        \ has been deprecated in favour of 'Node-Scripts'."
      operationId: CommissioningScriptsHandler_create
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new script.
      summary: CommissioningScriptsHandler create
      tags:
      - Commissioning scripts (deprecated)
  /commissioning-scripts/{name}:
    delete:
      deprecated: true
      description: "Manage a custom commissioning script.\n\n    This functionality\
        \ is only available to administrators.\n\nThe 'Commissioning-script' endpoint\
        \ has been deprecated in favour of 'Node-Script'."
      operationId: CommissioningScriptHandler_delete
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: CommissioningScriptHandler delete
      tags:
      - Commissioning script (deprecated)
    get:
      deprecated: true
      description: "Manage a custom commissioning script.\n\n    This functionality\
        \ is only available to administrators.\n\nThe 'Commissioning-script' endpoint\
        \ has been deprecated in favour of 'Node-Script'."
      operationId: CommissioningScriptHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: CommissioningScriptHandler read
      tags:
      - Commissioning script (deprecated)
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    put:
      deprecated: true
      description: "Manage a custom commissioning script.\n\n    This functionality\
        \ is only available to administrators.\n\nThe 'Commissioning-script' endpoint\
        \ has been deprecated in favour of 'Node-Script'."
      operationId: CommissioningScriptHandler_update
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: CommissioningScriptHandler update
      tags:
      - Commissioning script (deprecated)
  /devices/:
    get:
      description: 'List nodes visible to current user, optionally filtered by criteria.


        Nodes are sorted by id (i.e. most recent last) and grouped by type.'
      operationId: DevicesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of node objects.
      summary: List Nodes visible to the user
      tags:
      - Devices
    post:
      description: Create a new device.
      operationId: DevicesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A optional description.
                  type: string
                domain:
                  description: The domain of the device. If not given the default
                    domain is used.
                  type: string
                hostname:
                  description: A hostname. If not given, one will be generated.
                  type: string
                mac_addresses:
                  description: One or more MAC addresses for the device.
                  type: string
                parent:
                  description: The system id of the parent.
                  type: string
              required:
              - mac_addresses
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new device.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: There was a problem with the given parameters.
      summary: Create a new device
      tags:
      - Devices
  /devices/op-is_registered:
    get:
      description: Returns whether or not the given MAC address is registered within
        this MAAS (and attached to a non-retired node).
      operationId: DevicesHandler_is_registered
      responses:
        '200':
          description: '''true'' or ''false'''
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: mac_address was missing
      summary: MAC address registered
      tags:
      - Devices
  /devices/op-set_zone:
    post:
      description: Assigns a given node to a given zone.
      operationId: DevicesHandler_set_zone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                nodes:
                  description: The node to add.
                  type: string
                zone:
                  description: The zone name.
                  type: string
              required:
              - zone
              - nodes
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The given parameters were not correct.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
      summary: Assign nodes to a zone
      tags:
      - Devices
  /devices/{system_id}/:
    delete:
      description: Delete a device with the given system_id.
      operationId: DeviceHandler_delete
      parameters:
      - description: A device system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to delete the
            device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested device is not found.
      summary: Delete a device
      tags:
      - Device
    get:
      description: Reads a node with the given system_id.
      operationId: DeviceHandler_read
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Read a node
      tags:
      - Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    put:
      description: Update a device with a given system_id.
      operationId: DeviceHandler_update
      parameters:
      - description: A device system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: The optional description for this machine.
                  type: string
                domain:
                  description: The domain for this device.
                  type: string
                hostname:
                  description: The hostname for this device.
                  type: string
                parent:
                  description: Optional system_id to indicate this device's parent.
                    If the parent is already set and this parameter is omitted, the
                    parent will be unchanged.
                  type: string
                zone:
                  description: Name of a valid physical zone in which to place this
                    node.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested device is not found.
      summary: Update a device
      tags:
      - Device
  /devices/{system_id}/op-details:
    get:
      description: 'Returns system details -- for example, LLDP and ``lshw`` XML dumps.


        Returns a ``{detail_type: xml, ...}`` map, where ``detail_type`` is something
        like "lldp" or "lshw".


        Note that this is returned as BSON and not JSON. This is for efficiency, but
        mainly because JSON can''t do binary content without applying additional encoding
        like base-64. The example output below is represented in ASCII using ``bsondump
        example.bson`` and is for demonstrative purposes.'
      operationId: DeviceHandler_details
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A BSON object represented here in ASCII using ``bsondump example.bson``.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get system details
      tags:
      - Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /devices/{system_id}/op-power_parameters:
    get:
      description: 'Gets power parameters for a given system_id, if any. For some
        types of power control this will include private information such as passwords
        and secret keys.


        Note that this method is reserved for admin users and returns a 403 if the
        user is not one.'
      operationId: DeviceHandler_power_parameters
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see the power parameters.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get power parameters
      tags:
      - Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /devices/{system_id}/op-restore_default_configuration:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Restore the configuration options of a device with the given system_id
        to default values.
      operationId: DeviceHandler_restore_default_configuration
      parameters:
      - description: A device system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested device is not found.
      summary: Reset device configuration
      tags:
      - Device
  /devices/{system_id}/op-restore_networking_configuration:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Restore the networking options of a device with the given system_id
        to default values.
      operationId: DeviceHandler_restore_networking_configuration
      parameters:
      - description: A device system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested device is not found.
      summary: Reset networking options
      tags:
      - Device
  /devices/{system_id}/op-set_owner_data:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      deprecated: true
      description: Deprecated, use set-workload-annotations instead.
      operationId: DeviceHandler_set_owner_data
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Deprecated, use set-workload-annotations.
      tags:
      - Device
  /devices/{system_id}/op-set_workload_annotations:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Set key=value data for the current owner.


        Pass any key=value form data to this method to add, modify, or remove.

        A key is removed when the value for that key is set to an empty string.


        This operation will not remove any previous keys unless explicitly passed
        with an empty string. All workload annotations are removed when the machine
        is no longer allocated to a user.'
      operationId: DeviceHandler_set_workload_annotations
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                key:
                  description: '``key`` can be any string value.'
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Set key=value data
      tags:
      - Device
  /dhcp-snippets/:
    get:
      description: List all available DHCP snippets.
      operationId: DHCPSnippetsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all available DHCP snippets.
      summary: List DHCP snippets
      tags:
      - DHCP Snippets
    post:
      description: Creates a DHCP snippet.
      operationId: DHCPSnippetsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A description of what the snippet does.
                  type: string
                enabled:
                  description: Whether or not the snippet is currently enabled.
                  type: boolean
                global_snippet:
                  description: Whether or not this snippet is to be applied globally.
                    Cannot be used with node or subnet.
                  type: boolean
                iprange:
                  description: The iprange within a subnet this snippet applies to.
                    Must also provide a subnet value.
                  type: string
                name:
                  description: The name of the DHCP snippet.
                  type: string
                node:
                  description: The node this snippet applies to. Cannot be used with
                    subnet or global_snippet.
                  type: string
                subnet:
                  description: The subnet this snippet applies to. Cannot be used
                    with node or global_snippet.
                  type: string
                value:
                  description: The snippet of config inserted into dhcpd.conf.
                  type: string
              required:
              - name
              - value
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new DHCP snippet object.
      summary: Create a DHCP snippet
      tags:
      - DHCP Snippets
  /dhcp-snippets/{id}/:
    delete:
      description: Delete a DHCP snippet with the given id.
      operationId: DHCPSnippetHandler_delete
      parameters:
      - description: A DHCP snippet id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DHCP snippet is not found.
      summary: Delete a DHCP snippet
      tags:
      - DHCP Snippet
    get:
      description: Read a DHCP snippet with the given id.
      operationId: DHCPSnippetHandler_read
      parameters:
      - description: A DHCP snippet id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested DHCP
            snippet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DHCP snippet is not found.
      summary: Read a DHCP snippet
      tags:
      - DHCP Snippet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a DHCP snippet with the given id.
      operationId: DHCPSnippetHandler_update
      parameters:
      - description: A DHCP snippet id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A description of what the DHCP snippet does.
                  type: string
                enabled:
                  description: Whether or not the DHCP snippet is currently enabled.
                  type: boolean
                global_snippet:
                  description: Set the DHCP snippet to be a global option. This removes
                    any node or subnet links.
                  type: boolean
                name:
                  description: The name of the DHCP snippet.
                  type: string
                node:
                  description: The node the DHCP snippet is to be used for. Can not
                    be set if subnet is set.
                  type: string
                subnet:
                  description: The subnet the DHCP snippet is to be used for. Can
                    not be set if node is set.
                  type: string
                value:
                  description: The new value of the DHCP snippet to be used in dhcpd.conf.
                    Previous values are stored and can be reverted.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated DHCP
            snippet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DHCP snippet is not found.
      summary: Update a DHCP snippet
      tags:
      - DHCP Snippet
  /dhcp-snippets/{id}/op-revert:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Revert the value of a DHCP snippet with the given id to an earlier
        revision.
      operationId: DHCPSnippetHandler_revert
      parameters:
      - description: A DHCP snippet id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                to:
                  description: What revision in the DHCP snippet's history to revert
                    to. This can either be an ID or a negative number representing
                    how far back to go.
                  type: integer
              required:
              - to
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the reverted DHCP
            snippet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DHCP snippet is not found.
      summary: Revert DHCP snippet to earlier version
      tags:
      - DHCP Snippet
  /discovery/:
    get:
      description: Lists all the devices MAAS has discovered. Discoveries are listed
        in the order they were last observed on the network (most recent first).
      operationId: DiscoveriesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all previously discovered
            devices.
      summary: List all discovered devices
      tags:
      - Discoveries
  /discovery/op-by_unknown_ip:
    get:
      description: 'Lists all discovered devices with an unknown IP address.


        Filters the list of discovered devices by excluding any discoveries where
        a known MAAS node is configured with the IP address of a discovery, or has
        been observed using it after it was assigned by a MAAS-managed DHCP server.


        Discoveries are listed in the order they were last observed on the network
        (most recent first).'
      operationId: DiscoveriesHandler_by_unknown_ip
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all previously discovered
            devices with unknown IP addresses.
      summary: List all discovered devices with an unknown IP address
      tags:
      - Discoveries
  /discovery/op-by_unknown_ip_and_mac:
    get:
      description: 'Lists all discovered devices completely unknown to MAAS.


        Filters the list of discovered devices by excluding any discoveries where
        a known MAAS node is configured with either the MAC address or the IP address
        of a discovery.


        Discoveries are listed in the order they were last observed on the network
        (most recent first).'
      operationId: DiscoveriesHandler_by_unknown_ip_and_mac
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all previously discovered
            devices with unknown MAC and IP addresses.
      summary: Lists all discovered devices completely unknown to MAAS
      tags:
      - Discoveries
  /discovery/op-by_unknown_mac:
    get:
      description: 'Filters the list of discovered devices by excluding any discoveries
        where an interface known to MAAS is configured with a discovered MAC address.


        Discoveries are listed in the order they were last observed on the network
        (most recent first).'
      operationId: DiscoveriesHandler_by_unknown_mac
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of all previously discovered
            devices with unknown MAC addresses.
      summary: List all discovered devices with unknown MAC
      tags:
      - Discoveries
  /discovery/op-clear:
    post:
      description: 'Deletes all discovered neighbours and/or mDNS entries.


        Note: One of ``mdns``, ``neighbours``, or ``all`` parameters must be supplied.'
      operationId: DiscoveriesHandler_clear
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                all:
                  description: Delete all discovery data.
                  type: boolean
                mdns:
                  description: Delete all mDNS entries.
                  type: boolean
                neighbours:
                  description: Delete all neighbour entries.
                  type: boolean
              type: object
        required: true
      responses:
        '200':
          description: '204'
      summary: Delete all discovered neighbours
      tags:
      - Discoveries
  /discovery/op-clear_by_mac_and_ip:
    post:
      description: Deletes all discovered neighbours (and associated reverse DNS entries)
        associated with the given IP address and MAC address.
      operationId: DiscoveriesHandler_clear_by_mac_and_ip
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                ip:
                  description: IP address
                  type: string
                mac:
                  description: MAC address
                  type: string
              required:
              - ip
              - mac
              type: object
        required: true
      responses:
        '200':
          description: '204'
      summary: Delete discoveries that match a MAC and IP
      tags:
      - Discoveries
  /discovery/op-scan:
    post:
      description: 'Immediately run a neighbour discovery scan on all rack networks.


        This command causes each connected rack controller to execute the ''maas-rack
        scan-network'' command, which will scan all CIDRs configured on the rack controller
        using ''nmap'' (if it is installed) or ''ping''.


        Network discovery must not be set to ''disabled'' for this command to be useful.


        Scanning will be started in the background, and could take a long time on
        rack controllers that do not have ''nmap'' installed and are connected to
        large networks.


        If the call is a success, this method will return a dictionary of results
        with the following keys: ``result``: A human-readable string summarizing the
        results.


        ``scan_attempted_on``: A list of rack system_id values where a scan was attempted.
        (That is, an RPC connection was successful and a subsequent call was intended.)
        ``failed_to_connect_to``: A list of rack system_id values where the RPC connection
        failed.


        ``scan_started_on``: A list of rack system_id values where a scan was successfully
        started.


        ``scan_failed_on``: A list of rack system_id values where a scan was attempted,
        but failed because a scan was already in progress.


        ``rpc_call_timed_out_on``: A list of rack system_id values where the RPC connection
        was made, but the call timed out before a ten second timeout elapsed.'
      operationId: DiscoveriesHandler_scan
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                always_use_ping:
                  description: 'If True, will force the scan to use ''ping'' even
                    if ''nmap'' is installed. Default: False.'
                  type: string
                cidr:
                  description: The subnet CIDR(s) to scan (can be specified multiple
                    times). If not specified, defaults to all networks.
                  type: string
                force:
                  description: 'If True, will force the scan, even if all networks
                    are specified. (This may not be the best idea, depending on acceptable
                    use agreements, and the politics of the organization that owns
                    the network.) Note that this parameter is required if all networks
                    are specified. Default: False.'
                  type: boolean
                slow:
                  description: 'If True, and ''nmap'' is being used, will limit the
                    scan to nine packets per second. If the scanner is ''ping'', this
                    option has no effect. Default: False.'
                  type: string
                threads:
                  description: The number of threads to use during scanning. If 'nmap'
                    is the scanner, the default is one thread per 'nmap' process.
                    If 'ping' is the scanner, the default is four threads per CPU.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a dictionary of results.
      summary: Run discovery scan on rack networks
      tags:
      - Discoveries
  /discovery/{discovery_id}/:
    get:
      description: Read a discovery with the given discovery_id.
      operationId: DiscoveryHandler_read
      parameters:
      - description: A discovery_id.
        in: path
        name: discovery_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested discovery.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested discovery is not found.
      summary: Read a discovery
      tags:
      - Discovery
    parameters:
    - in: path
      name: discovery_id
      required: true
      schema:
        type: string
  /dnsresourcerecords/:
    get:
      description: List all DNS resource records.
      operationId: DNSResourceRecordsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of the requested DNS resource
            record objects.
      summary: List all DNS resource records
      tags:
      - DNSResourceRecords
    post:
      description: Create a new DNS resource record.
      operationId: DNSResourceRecordsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                domain:
                  description: The domain (name or id) where to create the DNS resource
                    record (Domain (e.g. 'maas')
                  type: string
                fqdn:
                  description: Hostname (with domain) for the dnsresource. Either
                    ``fqdn`` or ``name`` and ``domain`` must be specified. ``fqdn``
                    is ignored if either name or domain is given (e.g. www.your-maas.maas).
                  type: string
                name:
                  description: The name (or hostname without a domain) of the DNS
                    resource record (e.g. www.your-maas)
                  type: string
                rrdata:
                  description: The resource record data (e.g. 'your-maas', '10 mail.your-maas.maas')
                  type: string
                rrtype:
                  description: The resource record type (e.g ``cname``, ``mx``, ``ns``,
                    ``srv``, ``sshfp``, ``txt``).
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new DNS resource record object.
      summary: Create a DNS resource record
      tags:
      - DNSResourceRecords
  /dnsresourcerecords/{id}/:
    delete:
      description: Delete a DNS resource record with the given id.
      operationId: DNSResourceRecordHandler_delete
      parameters:
      - description: The DNS resource record id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to delete the requested DNS
            resource record.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource record is not found.
      summary: Delete a DNS resource record
      tags:
      - DNSResourceRecord
    get:
      description: Manage dnsresourcerecord.
      operationId: DNSResourceRecordHandler_read
      parameters:
      - description: The DNS resource record id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested DNS resource object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource record was not found.
      summary: Read a DNS resource record description Read a DNS resource record with
        the given id.
      tags:
      - DNSResourceRecord
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a DNS resource record with the given id.
      operationId: DNSResourceRecordHandler_update
      parameters:
      - description: The DNS resource record id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                rrdata:
                  description: Resource data (everything to the right of type.)
                  type: string
                rrtype:
                  description: Resource type.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated DNS resource record object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to update the requested DNS
            resource record.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource record is not found.
      summary: Update a DNS resource record
      tags:
      - DNSResourceRecord
  /dnsresources/:
    get:
      description: List all resources for the specified criteria.
      operationId: DNSResourcesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of the requested DNS resource
            objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resources are not found.
      summary: List resources
      tags:
      - DNSResources
    post:
      description: Create a DNS resource.
      operationId: DNSResourcesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                address_ttl:
                  description: Default TTL for entries in this zone.
                  type: string
                domain:
                  description: Domain (name or id).
                  type: string
                fqdn:
                  description: Hostname (with domain) for the dnsresource. Either
                    ``fqdn`` or ``name`` and ``domain`` must be specified. ``fqdn``
                    is ignored if either ``name`` or ``domain`` is given.
                  type: string
                ip_addresses:
                  description: Address (ip or id) to assign to the dnsresource. This
                    creates an A or AAAA record, for each of the supplied ip_addresses,
                    IPv4 or IPv6, respectively.
                  type: string
                name:
                  description: Hostname (without domain).
                  type: string
              required:
              - name
              - domain
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new DNS resource object.
      summary: Create a DNS resource
      tags:
      - DNSResources
  /dnsresources/{id}/:
    delete:
      description: Delete a DNS resource with the given id.
      operationId: DNSResourceHandler_delete
      parameters:
      - description: The DNS resource id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to update the requested DNS
            resource.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource is not found.
      summary: Delete a DNS resource
      tags:
      - DNSResource
    get:
      description: Read a DNS resource by id.
      operationId: DNSResourceHandler_read
      parameters:
      - description: The DNS resource id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested DNS resource object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource is not found.
      summary: Read a DNS resource
      tags:
      - DNSResource
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a DNS resource with the given id.
      operationId: DNSResourceHandler_update
      parameters:
      - description: The DNS resource id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                address_ttl:
                  description: Default TTL for entries in this zone.
                  type: string
                domain:
                  description: Domain (name or id).
                  type: string
                fqdn:
                  description: Hostname (with domain) for the dnsresource. Either
                    ``fqdn`` or ``name`` and ``domain`` must be specified. ``fqdn``
                    is ignored if either ``name`` or ``domain`` is given.
                  type: string
                ip_addresses:
                  description: Address (ip or id) to assign to the dnsresource. This
                    creates an A or AAAA record, for each of the supplied ip_addresses,
                    IPv4 or IPv6, respectively.
                  type: string
                name:
                  description: Hostname (without domain).
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated DNS resource object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to update the requested DNS
            resource.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested DNS resource is not found.
      summary: Update a DNS resource
      tags:
      - DNSResource
  /domains/:
    get:
      description: List all domains.
      operationId: DomainsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of domain objects.
      summary: List all domains
      tags:
      - Domains
    post:
      description: Create a domain.
      operationId: DomainsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                authoritative:
                  description: Class type of the domain.
                  type: string
                forward_dns_servers:
                  description: List of forward dns server IP addresses when MAAS is
                    not authorititative.
                  type: string
                name:
                  description: Name of the domain.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new domain object.
      summary: Create a domain
      tags:
      - Domains
  /domains/op-set_serial:
    post:
      description: Set the SOA serial number for all DNS zones.
      operationId: DomainsHandler_set_serial
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                serial:
                  description: Serial number to use next.
                  type: integer
              required:
              - serial
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: No content returned.
      summary: Set the SOA serial number
      tags:
      - Domains
  /domains/{id}/:
    delete:
      description: Delete a domain with the given id.
      operationId: DomainHandler_delete
      parameters:
      - description: A domain id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            domain.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested domain name is not found.
      summary: Delete domain
      tags:
      - Domain
    get:
      description: Read a domain with the given id.
      operationId: DomainHandler_read
      parameters:
      - description: A domain id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requsted domain.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested domain is not found.
      summary: Read domain
      tags:
      - Domain
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a domain with the given id.
      operationId: DomainHandler_update
      parameters:
      - description: A domain id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                authoritative:
                  description: True if we are authoritative for this domain.
                  type: string
                forward_dns_servers:
                  description: List of IP addresses for forward DNS servers when MAAS
                    is not authoritative for this domain.
                  type: string
                name:
                  description: Name of the domain.
                  type: string
                ttl:
                  description: The default TTL for this domain.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated domain.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            domain.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested domain name is not found.
      summary: Update a domain
      tags:
      - Domain
  /domains/{id}/op-set_default:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Set the specified domain to be the default.
      operationId: DomainHandler_set_default
      parameters:
      - description: A domain id. If any unallocated nodes are using the previous
          default domain, changes them to use the new default domain.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated domain.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            domain.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested domain name is not found.
      summary: Set domain as default
      tags:
      - Domain
  /events/op-query:
    get:
      description: List node events, optionally filtered by various criteria via URL
        query parameters.
      operationId: EventsHandler_query
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of events objects.
      summary: List node events
      tags:
      - Events
  /fabrics/:
    get:
      description: List all fabrics.
      operationId: FabricsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of fabric objects.
      summary: List fabrics
      tags:
      - Fabrics
    post:
      description: Create a fabric.
      operationId: FabricsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                class_type:
                  description: Class type of the fabric.
                  type: string
                description:
                  description: Description of the fabric.
                  type: string
                name:
                  description: Name of the fabric.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new fabric object.
      summary: Create a fabric
      tags:
      - Fabrics
  /fabrics/{fabric_id}/vlans/:
    get:
      description: List all VLANs belonging to given fabric.
      operationId: VlansHandler_read
      parameters:
      - description: The fabric for which to list the VLANs.
        in: path
        name: fabric_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of VLANs in the given fabric.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric_id is not found.
      summary: List VLANs
      tags:
      - VLANs
    parameters:
    - in: path
      name: fabric_id
      required: true
      schema:
        type: string
    post:
      description: Creates a new VLAN.
      operationId: VlansHandler_create
      parameters:
      - description: The fabric_id on which to add the new VLAN.
        in: path
        name: fabric_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: Description of the new VLAN.
                  type: string
                mtu:
                  description: The MTU to use on the VLAN.
                  type: integer
                name:
                  description: Name of the VLAN.
                  type: string
                space:
                  description: The space this VLAN should be placed in. Passing in
                    an empty string (or the string 'undefined') will cause the VLAN
                    to be placed in the 'undefined' space.
                  type: string
                vid:
                  description: VLAN ID of the new VLAN.
                  type: integer
              required:
              - vid
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new VLAN.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric_id is not found.
      summary: Create a VLAN
      tags:
      - VLANs
  /fabrics/{fabric_id}/vlans/{vid}/:
    delete:
      description: Delete VLAN on a given fabric.
      operationId: VlanHandler_delete
      parameters:
      - description: Fabric ID containing the VLAN to delete.
        in: path
        name: fabric_id
        required: true
        schema:
          type: integer
      - description: VLAN ID of the VLAN to delete.
        in: path
        name: vid
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric_id or vid is not found.
      summary: Delete a VLAN
      tags:
      - VLAN
    get:
      description: Retrieves a VLAN on a given fabric_id.
      operationId: VlanHandler_read
      parameters:
      - description: The fabric_id containing the VLAN.
        in: path
        name: fabric_id
        required: true
        schema:
          type: integer
      - description: The VLAN ID.
        in: path
        name: vid
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested VLAN.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric_id or vid is not found.
      summary: Retrieve VLAN
      tags:
      - VLAN
    parameters:
    - in: path
      name: fabric_id
      required: true
      schema:
        type: string
    - in: path
      name: vid
      required: true
      schema:
        type: string
    put:
      description: Updates a given VLAN.
      operationId: VlanHandler_update
      parameters:
      - description: Fabric ID containing the VLAN.
        in: path
        name: fabric_id
        required: true
        schema:
          type: integer
      - description: VLAN ID of the VLAN.
        in: path
        name: vid
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: Description of the VLAN.
                  type: string
                dhcp_on:
                  description: Whether or not DHCP should be managed on the VLAN.
                  type: boolean
                mtu:
                  description: The MTU to use on the VLAN.
                  type: integer
                name:
                  description: Name of the VLAN.
                  type: string
                primary_rack:
                  description: The primary rack controller managing the VLAN (system_id).
                  type: string
                relay_vlan:
                  description: Relay VLAN ID. Only set when this VLAN will be using
                    a DHCP relay to forward DHCP requests to another VLAN that MAAS
                    is managing. MAAS will not run the DHCP relay itself, it must
                    be configured to proxy reqests to the primary and/or secondary
                    rack controller interfaces for the VLAN specified in this field.
                  type: integer
                secondary_rack:
                  description: The secondary rack controller managing the VLAN (system_id).
                  type: string
                space:
                  description: The space this VLAN should be placed in. Passing in
                    an empty string (or the string 'undefined') will cause the VLAN
                    to be placed in the 'undefined' space.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated VLAN.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric_id or vid is not found.
      summary: Update VLAN
      tags:
      - VLAN
  /fabrics/{id}/:
    delete:
      description: Delete a fabric with the given id.
      operationId: FabricHandler_delete
      parameters:
      - description: A fabric id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric is not found.
      summary: Delete a fabric
      tags:
      - Fabric
    get:
      description: Read a fabric with the given id.
      operationId: FabricHandler_read
      parameters:
      - description: A fabric id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested fabric object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric is not found.
      summary: Read a fabric
      tags:
      - Fabric
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a fabric with the given id.
      operationId: FabricHandler_update
      parameters:
      - description: A fabric id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                class_type:
                  description: Class type of the fabric.
                  type: string
                description:
                  description: Description of the fabric.
                  type: string
                name:
                  description: Name of the fabric.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated fabric object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested fabric is not found.
      summary: Update fabric
      tags:
      - Fabric
  /files/:
    delete:
      description: Delete a stored file.
      operationId: FilesHandler_delete
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested file is not found.
      summary: Delete a file
      tags:
      - Files
    get:
      description: 'List the files from the file storage.


        The returned files are ordered by file name and the content is excluded.'
      operationId: FilesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of the reqeusted file names.
      summary: List files
      tags:
      - Files
    post:
      description: Add a new file to the file storage.
      operationId: FilesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                file:
                  description: File data. Content type must be ``application/octet-stream``.
                  type: string
                filename:
                  description: The file name to use in storage.
                  type: string
              required:
              - filename
              - file
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new file.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The filename is missing, the file data is missing or more than
            one file is supplied.
      summary: Add a new file
      tags:
      - Files
  /files/op-get:
    get:
      description: Get a named file from the file storage.
      operationId: FilesHandler_get
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested file.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested file is not found.
      summary: Get a named file
      tags:
      - Files
  /files/op-get_by_key:
    get:
      description: Get a file from the file storage with the given key.
      operationId: FilesHandler_get_by_key
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested file.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested file is not found.
      summary: Get a file by key
      tags:
      - Files
  /files/{filename}/:
    delete:
      description: Delete a file with the given file name.
      operationId: FileHandler_delete
      parameters:
      - description: The name of the file.
        in: path
        name: filename
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested file is not found.
      summary: Delete a file
      tags:
      - File
    get:
      description: 'Reads a stored file with the given file name.


        The content of the file is base64-encoded.'
      operationId: FileHandler_read
      parameters:
      - description: The name of the file.
        in: path
        name: filename
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested file.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested file is not found.
      summary: Read a stored file
      tags:
      - File
    parameters:
    - in: path
      name: filename
      required: true
      schema:
        type: string
  /installation-results/:
    get:
      description: Read the commissioning results per node visible to the user, optionally
        filtered.
      operationId: NodeResultsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of the requested installation-result
            objects.
      summary: Read commissioning results
      tags:
      - Commissioning results
  /ipaddresses/:
    get:
      description: 'List all IP addresses known to MAAS.


        By default, gets a listing of all IP addresses allocated to the requesting
        user.'
      operationId: IPAddressesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of IP address objects.
      summary: List IP addresses
      tags:
      - IP Addresses
  /ipaddresses/op-release:
    post:
      description: Release an IP address that was previously reserved by the user.
      operationId: IPAddressesHandler_release
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                discovered:
                  description: If True, allows a MAAS administrator to release a discovered
                    address. Only valid if 'force' is specified. If not specified,
                    MAAS will attempt to release any type of address except for discovered
                    addresses.
                  type: boolean
                force:
                  description: If True, allows a MAAS administrator to force an IP
                    address to be released, even if it is not a user-reserved IP address
                    or does not belong to the requesting user. Use with caution.
                  type: boolean
                ip:
                  description: The IP address to release.
                  type: string
              required:
              - ip
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested IP address is not found.
      summary: Release an IP address
      tags:
      - IP Addresses
  /ipaddresses/op-reserve:
    post:
      description: 'Reserve an IP address for use outside of MAAS.


        Returns an IP adddress that MAAS will not allow any of its known nodes to
        use; it is free for use by the requesting user until released by the user.


        The user must supply either a subnet or a specific IP address within a subnet.'
      operationId: IPAddressesHandler_reserve
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                hostname:
                  description: The hostname to use for the specified IP address. If
                    no domain component is given, the default domain will be used.
                  type: string
                ip:
                  description: The IP address, which must be within a known subnet.
                  type: string
                ip_address:
                  description: (Deprecated.) Alias for 'ip' parameter. Provided for
                    backward compatibility.
                  type: string
                mac:
                  description: The MAC address that should be linked to this reservation.
                  type: string
                subnet:
                  description: CIDR representation of the subnet on which the IP reservation
                    is required. E.g. 10.1.2.0/24
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the reserved IP.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: No subnet in MAAS matching the provided one, or an ip_address
            was supplied, but a corresponding subnet could not be found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: No more IP addresses are available.
      summary: Reserve an IP address
      tags:
      - IP Addresses
  /ipranges/:
    get:
      description: List all available IP ranges.
      operationId: IPRangesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of IP ranges.
      summary: List all IP ranges
      tags:
      - IP Ranges
    post:
      description: Create a new IP range.
      operationId: IPRangesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: A description of this range.
                  type: string
                end_ip:
                  description: End IP address of this range (inclusive).
                  type: string
                start_ip:
                  description: Start IP address of this range (inclusive).
                  type: string
                subnet:
                  description: Subnet associated with this range.
                  type: integer
                type:
                  description: Type of this range. (``dynamic`` or ``reserved``)
                  type: string
              required:
              - type
              - start_ip
              - end_ip
              - subnet
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new IP range.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to create an
            IP range.
      summary: Create an IP range
      tags:
      - IP Ranges
  /ipranges/{id}/:
    delete:
      description: Delete an IP range with the given id.
      operationId: IPRangeHandler_delete
      parameters:
      - description: An IP range id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to delete the
            IP range.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested IP range is not found.
      summary: Delete an IP range
      tags:
      - IP Range
    get:
      description: Read an IP range with the given id.
      operationId: IPRangeHandler_read
      parameters:
      - description: An IP range id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested IP range.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested IP range is not found.
      summary: Read an IP range
      tags:
      - IP Range
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update an IP range with the given id.
      operationId: IPRangeHandler_update
      parameters:
      - description: An IP range id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: A description of this range. (optional)
                  type: string
                end_ip:
                  description: End IP address of this range (inclusive).
                  type: string
                start_ip:
                  description: Start IP address of this range (inclusive).
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested IP range.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            IP range.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested IP range is not found.
      summary: Update an IP range
      tags:
      - IP Range
  /license-key/{osystem}/{distro_series}:
    delete:
      description: Delete license key for the given operation system and distro series.
      operationId: LicenseKeyHandler_delete
      parameters:
      - description: Operating system that the key belongs to.
        in: path
        name: osystem
        required: true
        schema:
          type: string
      - description: OS release that the key belongs to.
        in: path
        name: distro_series
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested operating system and distro series combination
            is not found.
      summary: Delete license key
      tags:
      - License Key
    get:
      description: Read a license key for the given operating sytem and distro series.
      operationId: LicenseKeyHandler_read
      parameters:
      - description: Operating system that the key belongs to.
        in: path
        name: osystem
        required: true
        schema:
          type: string
      - description: OS release that the key belongs to.
        in: path
        name: distro_series
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested license key.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested operating system and distro series combination
            is not found.
      summary: Read license key
      tags:
      - License Key
    parameters:
    - in: path
      name: osystem
      required: true
      schema:
        type: string
    - in: path
      name: distro_series
      required: true
      schema:
        type: string
    put:
      description: Update a license key for the given operating system and distro
        series.
      operationId: LicenseKeyHandler_update
      parameters:
      - description: Operating system that the key belongs to.
        in: path
        name: osystem
        required: true
        schema:
          type: string
      - description: OS release that the key belongs to.
        in: path
        name: distro_series
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                license_key:
                  description: License key for osystem/distro_series combo.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated license key.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested operating system and distro series combination
            is not found.
      summary: Update license key
      tags:
      - License Key
  /license-keys/:
    get:
      description: List all available license keys.
      operationId: LicenseKeysHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of available license keys.
      summary: List license keys
      tags:
      - License Keys
    post:
      description: Define a license key.
      operationId: LicenseKeysHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                distro_series:
                  description: OS release that the key belongs to.
                  type: string
                license_key:
                  description: License key for osystem/distro_series combo.
                  type: string
                osystem:
                  description: Operating system that the key belongs to.
                  type: string
              required:
              - osystem
              - distro_series
              - license_key
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new license key.
      summary: Define a license key
      tags:
      - License Keys
  /maas/op-get_config:
    get:
      description: Get a configuration value.
      operationId: MaasHandler_get_config
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: A plain-text string containing the requested value, e.g. ``default_distro_series``.
      summary: Get a configuration value
      tags:
      - MAAS server
  /maas/op-set_config:
    post:
      description: Set a configuration value.
      operationId: MaasHandler_set_config
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: 'The name of the configuration item to be set. Available
                    configuration items: :active_discovery_interval: Active subnet
                    mapping interval. When enabled, each rack will scan subnets enabled
                    for active mapping. This helps ensure discovery information is
                    accurate and complete. :boot_images_auto_import: Automatically
                    import/refresh the boot images every 60 minutes. :boot_images_no_proxy:
                    Set no_proxy with the image repository address when MAAS is behind
                    (or set with) a proxy.. By default, when MAAS is behind (and set
                    with) a proxy, it is used to download images from the image repository.
                    In some situations (e.g. when using a local image repository)
                    it doesn''t make sense for MAAS to use the proxy to download images
                    because it can access them directly. Setting this option allows
                    MAAS to access the (local) image repository directly by setting
                    the no_proxy variable for the MAAS env with the address of the
                    image repository. :commissioning_distro_series: Default Ubuntu
                    release used for commissioning. :completed_intro: Marks if the
                    initial intro has been completed. :curtin_verbose: Run the fast-path
                    installer with higher verbosity. This provides more detail in
                    the installation logs. :default_distro_series: Default OS release
                    used for deployment. :default_dns_ttl: Default Time-To-Live for
                    the DNS. If no TTL value is specified at a more specific point
                    this is how long DNS responses are valid, in seconds. :default_min_hwe_kernel:
                    Default Minimum Kernel Version. The default minimum kernel version
                    used on all new and commissioned nodes. :default_osystem: Default
                    operating system used for deployment. :default_storage_layout:
                    Default storage layout. Storage layout that is applied to a node
                    when it is commissioned. Available choices are: ''bcache'' (Bcache
                    layout), ''blank'' (No storage (blank) layout), ''custom'' (Custom
                    layout (from commissioning storage config)), ''flat'' (Flat layout),
                    ''lvm'' (LVM layout), ''vmfs6'' (VMFS6 layout), ''vmfs7'' (VMFS7
                    layout). :disk_erase_with_quick_erase: Use quick erase by default
                    when erasing disks.. This is not a secure erase; it wipes only
                    the beginning and end of each disk. :disk_erase_with_secure_erase:
                    Use secure erase by default when erasing disks. Will only be used
                    on devices that support secure erase. Other devices will fall
                    back to full wipe or quick erase depending on the selected options.
                    :dns_trusted_acl: List of external networks (not previously known),
                    that will be allowed to use MAAS for DNS resolution.. MAAS keeps
                    a list of networks that are allowed to use MAAS for DNS resolution.
                    This option allows to add extra networks (not previously known)
                    to the trusted ACL where this list of networks is kept. It also
                    supports specifying IPs or ACL names. :dnssec_validation: Enable
                    DNSSEC validation of upstream zones. Only used when MAAS is running
                    its own DNS server. This value is used as the value of ''dnssec_validation''
                    in the DNS server config. :enable_analytics: Enable Google Analytics
                    in MAAS UI to shape improvements in user experience. :enable_disk_erasing_on_release:
                    Erase nodes'' disks prior to releasing. Forces users to always
                    erase disks when releasing. :enable_http_proxy: Enable the use
                    of an APT or YUM and HTTP/HTTPS proxy. Provision nodes to use
                    the built-in HTTP proxy (or user specified proxy) for APT or YUM.
                    MAAS also uses the proxy for downloading boot images. :enable_third_party_drivers:
                    Enable the installation of proprietary drivers (i.e. HPVSA). :enlist_commissioning:
                    Whether to run commissioning during enlistment.. Enables running
                    all built-in commissioning scripts during enlistment. :force_v1_network_yaml:
                    Always use the legacy v1 YAML (rather than Netplan format, also
                    known as v2 YAML) when composing the network configuration for
                    a machine.. :hardware_sync_interval: Hardware Sync Interval. The
                    interval to send hardware info to MAAS fromhardware sync enabled
                    machines, in systemd time span syntax. :http_proxy: Proxy for
                    APT or YUM and HTTP/HTTPS. This will be passed onto provisioned
                    nodes to use as a proxy for APT or YUM traffic. MAAS also uses
                    the proxy for downloading boot images. If no URL is provided,
                    the built-in MAAS proxy will be used. :kernel_opts: Boot parameters
                    to pass to the kernel by default. :maas_auto_ipmi_cipher_suite_id:
                    MAAS IPMI Default Cipher Suite ID. The default IPMI cipher suite
                    ID to use when connecting to the BMC via ipmitools Available choices
                    are: '''' (freeipmi-tools default), ''12'' (12 - HMAC-MD5::MD5-128::AES-CBC-128),
                    ''17'' (17 - HMAC-SHA256::HMAC_SHA256_128::AES-CBC-128), ''3''
                    (3 - HMAC-SHA1::HMAC-SHA1-96::AES-CBC-128), ''8'' (8 - HMAC-MD5::HMAC-MD5-128::AES-CBC-128).
                    :maas_auto_ipmi_k_g_bmc_key: The IPMI K_g key to set during BMC
                    configuration.. This IPMI K_g BMC key is used to encrypt all IPMI
                    traffic to a BMC. Once set, all clients will REQUIRE this key
                    upon being commissioned. Any current machines that were previously
                    commissioned will not require this key until they are recommissioned.
                    :maas_auto_ipmi_user: MAAS IPMI user.. The name of the IPMI user
                    that MAAS automatically creates during enlistment/commissioning.
                    :maas_auto_ipmi_user_privilege_level: MAAS IPMI privilege level.
                    The default IPMI privilege level to use when creating the MAAS
                    user and talking IPMI BMCs Available choices are: ''ADMIN'' (Administrator),
                    ''OPERATOR'' (Operator), ''USER'' (User). :maas_auto_ipmi_workaround_flags:
                    IPMI Workaround Flags. The default workaround flag (-W options)
                    to use for ipmipower commands Available choices are: '''' (None),
                    ''authcap'' (Authcap), ''endianseq'' (Endianseq), ''forcepermsg''
                    (Forcepermsg), ''idzero'' (Idzero), ''integritycheckvalue'' (Integritycheckvalue),
                    ''intel20'' (Intel20), ''ipmiping'' (Ipmiping), ''nochecksumcheck''
                    (Nochecksumcheck), ''opensesspriv'' (Opensesspriv), ''sun20''
                    (Sun20), ''supermicro20'' (Supermicro20), ''unexpectedauth'' (Unexpectedauth).
                    :maas_internal_domain: Domain name used by MAAS for internal mapping
                    of MAAS provided services.. This domain should not collide with
                    an upstream domain provided by the set upstream DNS. :maas_name:
                    MAAS name. :maas_proxy_port: Port to bind the MAAS built-in proxy
                    (default: 8000). Defines the port used to bind the built-in proxy.
                    The default port is 8000. :maas_syslog_port: Port to bind the
                    MAAS built-in syslog (default: 5247). Defines the port used to
                    bind the built-in syslog. The default port is 5247. :max_node_commissioning_results:
                    The maximum number of commissioning results runs which are stored.
                    :max_node_installation_results: The maximum number of installation
                    result runs which are stored. :max_node_testing_results: The maximum
                    number of testing results runs which are stored. :network_discovery:
                    . When enabled, MAAS will use passive techniques (such as listening
                    to ARP requests and mDNS advertisements) to observe networks attached
                    to rack controllers. Active subnet mapping will also be available
                    to be enabled on the configured subnets. :node_timeout: Time,
                    in minutes, until the node times out during commissioning, testing,
                    deploying, or entering rescue mode.. Commissioning, testing, deploying,
                    and entering rescue mode all set a timeout when beginning. If
                    MAAS does not hear from the node within the specified number of
                    minutes the node is powered off and set into a failed status.
                    :ntp_external_only: Use external NTP servers only. Configure all
                    region controller hosts, rack controller hosts, and subsequently
                    deployed machines to refer directly to the configured external
                    NTP servers. Otherwise only region controller hosts will be configured
                    to use those external NTP servers, rack contoller hosts will in
                    turn refer to the regions'' NTP servers, and deployed machines
                    will refer to the racks'' NTP servers. :ntp_servers: Addresses
                    of NTP servers. NTP servers, specified as IP addresses or hostnames
                    delimited by commas and/or spaces, to be used as time references
                    for MAAS itself, the machines MAAS deploys, and devices that make
                    use of MAAS''s DHCP services. :prefer_v4_proxy: Sets IPv4 DNS
                    resolution before IPv6. If prefer_v4_proxy is set, the proxy will
                    be set to prefer IPv4 DNS resolution before it attempts to perform
                    IPv6 DNS resolution. :prometheus_enabled: Enable sending stats
                    to a prometheus gateway.. Allows MAAS to send statistics to Prometheus.
                    This requires the ''prometheus_push_gateway'' to be set. :prometheus_push_gateway:
                    Address or hostname of the Prometheus push gateway.. Defines the
                    address or hostname of the Prometheus push gateway where MAAS
                    will send data to. :prometheus_push_interval: Interval of how
                    often to send data to Prometheus (default: to 60 minutes).. The
                    internal of how often MAAS will send stats to Prometheus in minutes.
                    :promtail_enabled: Enable streaming logs to Promtail.. Whether
                    to stream logs to Promtail :promtail_port: TCP port of the Promtail
                    Push API.. Defines the TCP port of the Promtail push API where
                    MAAS will stream logs to. :release_notifications: Enable or disable
                    notifications for new MAAS releases.. :remote_syslog: Remote syslog
                    server to forward machine logs. A remote syslog server that MAAS
                    will set on enlisting, commissioning, testing, and deploying machines
                    to send all log messages. Clearing this value will restore the
                    default behaviour of forwarding syslog to MAAS. :subnet_ip_exhaustion_threshold_count:
                    If the number of free IP addresses on a subnet becomes less than
                    or equal to this threshold, an IP exhaustion warning will appear
                    for that subnet. :theme: MAAS theme. :tls_cert_expiration_notification_enabled:
                    Notify when the certificate is due to expire. Enable/Disable notification
                    about certificate expiration. :tls_cert_expiration_notification_interval:
                    Certificate expiration reminder (days). Configure notification
                    when certificate is due to expire in (days). :upstream_dns: Upstream
                    DNS used to resolve domains not managed by this MAAS (space-separated
                    IP addresses). Only used when MAAS is running its own DNS server.
                    This value is used as the value of ''forwarders'' in the DNS server
                    config. :use_peer_proxy: Use the built-in proxy with an external
                    proxy as a peer. If enable_http_proxy is set, the built-in proxy
                    will be configured to use http_proxy as a peer proxy. The deployed
                    machines will be configured to use the built-in proxy. :use_rack_proxy:
                    Use DNS and HTTP metadata proxy on the rack controllers when a
                    machine is booted.. All DNS and HTTP metadata traffic will flow
                    through the rack controller that a machine is booting from. This
                    isolated region controllers from machines. :vcenter_datacenter:
                    VMware vCenter datacenter. VMware vCenter datacenter which is
                    passed to a deployed VMware ESXi host. :vcenter_password: VMware
                    vCenter password. VMware vCenter server password which is passed
                    to a deployed VMware ESXi host. :vcenter_server: VMware vCenter
                    server FQDN or IP address. VMware vCenter server FQDN or IP address
                    which is passed to a deployed VMware ESXi host. :vcenter_username:
                    VMware vCenter username. VMware vCenter server username which
                    is passed to a deployed VMware ESXi host. :windows_kms_host: Windows
                    KMS activation host. FQDN or IP address of the host that provides
                    the KMS Windows activation service. (Only needed for Windows deployments
                    using KMS activation.)'
                  type: string
                value:
                  description: The value of the configuration item to be set.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: A plain-text string
      summary: Set a configuration value
      tags:
      - MAAS server
  /machines/:
    get:
      description: 'List nodes visible to current user, optionally filtered by criteria.


        Nodes are sorted by id (i.e. most recent last) and grouped by type.'
      operationId: MachinesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of node objects.
      summary: List Nodes visible to the user
      tags:
      - Machines
    post:
      description: 'Create a new machine.


        Adding a server to MAAS will (by default) cause the machine to network boot
        into an ephemeral environment to collect hardware information.


        In anonymous enlistment (and when the enlistment is done by a non-admin),
        the machine is held in the "New" state for approval by a MAAS admin.


        The minimum data required is: architecture=<arch string> (e.g. "i386/generic")
        mac_addresses=<value> (e.g. "aa:bb:cc:dd:ee:ff")'
      operationId: MachinesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                architecture:
                  description: 'A string containing the architecture type of the machine.
                    (For example, "i386", or "amd64".) To :type architecture: unicode'
                  type: string
                commission:
                  description: Request the newly created machine to be created with
                    status set to COMMISSIONING. Machines will wait for COMMISSIONING
                    results and not time out. Machines created by administrators will
                    be commissioned unless set to false.
                  type: boolean
                commissioning_scripts:
                  description: A comma seperated list of commissioning script names
                    and tags to be run. By default all custom commissioning scripts
                    are run. Built-in commissioning scripts always run. Selecting
                    'update_firmware' or 'configure_hba' will run firmware updates
                    or configure HBA's on matching machines.
                  type: string
                deployed:
                  description: Request the newly created machine to be created with
                    status set to DEPLOYED. Setting this to true implies commissioning=false,
                    meaning that the machine won't go through the commissioning process.
                  type: boolean
                description:
                  description: A optional description.
                  type: string
                domain:
                  description: The domain of the machine. If not given the default
                    domain is used.
                  type: string
                enable_ssh:
                  description: Whether to enable SSH for the commissioning environment
                    using the user's SSH key(s). '1' == True, '0' == False.
                  type: integer
                hostname:
                  description: A hostname. If not given, one will be generated.
                  type: string
                mac_addresses:
                  description: One or more MAC addresses for the machine. To specify
                    more than one MAC address, the parameter must be specified twice.
                    (such as "machines new mac_addresses=01:02:03:04:05:06 mac_addresses=02:03:04:05:06:07")
                  type: string
                min_hwe_kernel:
                  description: A string containing the minimum kernel version allowed
                    to be ran on this machine.
                  type: string
                power_parameters_{param:
                  description: The parameter(s) for the power_type. Note that this
                    is dynamic as the available parameters depend on the selected
                    value of the Machine's power_type. `Power types`_ section for
                    a list of the available power parameters for each power type.
                  type: string
                power_type:
                  description: A power management type, if applicable (e.g. "virsh",
                    "ipmi").
                  type: string
                skip_bmc_config:
                  description: Whether to skip re-configuration of the BMC for IPMI
                    based machines. '1' == True, '0' == False.
                  type: integer
                skip_networking:
                  description: Whether to skip re-configuring the networking on the
                    machine after the commissioning has completed. '1' == True, '0'
                    == False.
                  type: integer
                skip_storage:
                  description: Whether to skip re-configuring the storage on the machine
                    after the commissioning has completed. '1' == True, '0' == False.
                  type: integer
                subarchitecture:
                  description: A string containing the subarchitecture type of the
                    machine. (For example, "generic" or "hwe-t".) To determine the
                    supported subarchitectures, use the boot-resources endpoint.
                  type: string
                testing_scripts:
                  description: A comma seperated list of testing script names and
                    tags to be run. By default all tests tagged 'commissioning' will
                    be run. Set to 'none' to disable running tests.
                  type: string
              required:
              - architecture
              - mac_addresses
              - power_parameters_{param
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
      summary: Create a new machine
      tags:
      - Machines
  /machines/op-accept:
    post:
      description: 'Accept declared machines into MAAS.


        Machines can be enlisted in the MAAS anonymously or by non-admin users, as
        opposed to by an admin.  These machines are held in the New state; a MAAS
        admin must first verify the authenticity of these enlistments, and accept
        them.


        Enlistments can be accepted en masse, by passing multiple machines to this
        call.  Accepting an already accepted machine is not an error, but accepting
        one that is already allocated, broken, etc. is.'
      operationId: MachinesHandler_accept
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                machines:
                  description: A list of system_ids of the machines whose enlistment
                    is to be accepted. (An empty list is acceptable).
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of accepted machines.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: One or more of the given machines is not found.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to accept machines.
      summary: Accept declared machines
      tags:
      - Machines
  /machines/op-accept_all:
    post:
      description: 'Accept all declared machines into MAAS.


        Machines can be enlisted in the MAAS anonymously or by non-admin users, as
        opposed to by an admin.  These machines are held in the New state; a MAAS
        admin must first verify the authenticity of these enlistments, and accept
        them.'
      operationId: MachinesHandler_accept_all
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of accepted machines.
      summary: Accept all declared machines
      tags:
      - Machines
  /machines/op-add_chassis:
    post:
      description: Add special hardware types.
      operationId: MachinesHandler_add_chassis
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_all:
                  description: If true, all enlisted machines will be commissioned.
                  type: string
                chassis_type:
                  description: 'The type of hardware: - ``hmcz``: IBM Hardware Management
                    Console (HMC) for Z - ``mscm``: Moonshot Chassis Manager. - ``msftocs``:
                    Microsoft OCS Chassis Manager. - ``powerkvm``: Virtual Machines
                    on Power KVM, managed by Virsh. - ``proxmox``: Virtual Machines
                    managed by Proxmox - ``recs_box``: Christmann RECS|Box servers.
                    - ``sm15k``: Seamicro 1500 Chassis. - ``ucsm``: Cisco UCS Manager.
                    - ``virsh``: virtual machines managed by Virsh. - ``vmware`` is
                    the type for virtual machines managed by VMware.'
                  type: string
                domain:
                  description: The domain that each new machine added should use.
                  type: string
                hostname:
                  description: The URL, hostname, or IP address to access the chassis.
                  type: string
                password:
                  description: The password used to access the chassis. This field
                    is required for the ``recs_box``, ``seamicro15k``, ``vmware``,
                    ``mscm``, ``msftocs``, ``ucsm``, and ``hmcz`` chassis types.
                  type: string
                port:
                  description: '(``recs_box``, ``vmware``, ``msftocs`` only) The port
                    to use when accessing the chassis. The following are optional
                    if you are adding a vmware chassis:'
                  type: integer
                power_control:
                  description: (``seamicro15k`` only) The power_control to use, either
                    ipmi (default), restapi, or restapi2. The following are optional
                    if you are adding a proxmox chassis.
                  type: string
                prefix_filter:
                  description: (``virsh``, ``vmware``, ``powerkvm``, ``proxmox``,
                    ``hmcz`` only.) Filter machines with supplied prefix.
                  type: string
                protocol:
                  description: '(``vmware`` only) The protocol to use when accessing
                    the VMware chassis (default: https). :return: A string containing
                    the chassis powered on by which rack controller.'
                  type: string
                rack_controller:
                  description: The system_id of the rack controller to send the add
                    chassis command through. If none is specifed MAAS will automatically
                    determine the rack controller to use.
                  type: string
                token_name:
                  description: The name the authentication token to be used instead
                    of a password.
                  type: string
                token_secret:
                  description: The token secret to be used in combination with the
                    power_token_name used in place of a password.
                  type: string
                username:
                  description: The username used to access the chassis. This field
                    is required for the recs_box, seamicro15k, vmware, mscm, msftocs,
                    ucsm, and hmcz chassis types.
                  type: string
                verify_ssl:
                  description: Whether SSL connections should be verified. The following
                    are optional if you are adding a recs_box, vmware or msftocs chassis.
                  type: boolean
              required:
              - chassis_type
              - hostname
              type: object
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Asking maas-run to add machines from chassis
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: Required parameters are missing.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to access the rack controller.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No rack controller can be found that has access to the given
            URL.
      summary: Add special hardware
      tags:
      - Machines
  /machines/op-allocate:
    post:
      description: 'Allocates an available machine for deployment.


        Constraints parameters can be used to allocate a machine that possesses certain
        characteristics.  All the constraints are optional and when multiple constraints
        are provided, they are combined using ''AND'' semantics.'
      operationId: MachinesHandler_allocate
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                agent_name:
                  description: An optional agent name to attach to the acquired machine.
                  type: string
                arch:
                  description: Architecture of the returned machine (e.g. 'i386/generic',
                    'amd64', 'armhf/highbank', etc.). If multiple architectures are
                    specified, the machine to acquire may match any of the given architectures.
                    To request multiple architectures, this parameter must be repeated
                    in the request with each value.
                  type: string
                bridge_all:
                  description: 'Optionally create a bridge interface for every configured
                    interface on the machine. The created bridges will be removed
                    once the machine is released. (Default: False)'
                  type: boolean
                bridge_fd:
                  description: 'Optionally adjust the forward delay to time seconds.
                    (Default: 15)'
                  type: integer
                bridge_stp:
                  description: 'Optionally turn spanning tree protocol on or off for
                    the bridges created on every configured interface. (Default: off)'
                  type: boolean
                comment:
                  description: Comment for the event log.
                  type: string
                cpu_count:
                  description: Minimum number of CPUs a returned machine must have.
                    A machine with additional CPUs may be allocated if there is no
                    exact match, or if the 'mem' constraint is not also specified.
                  type: integer
                devices:
                  description: 'Only return a node which have one or more devices
                    containing the following constraints in the format key=value[,key2=value2[,...]]
                    Each key can be one of the following: - ``vendor_id``: The device
                    vendor id - ``product_id``: The device product id - ``vendor_name``:
                    The device vendor name, not case sensative - ``product_name``:
                    The device product name, not case sensative - ``commissioning_driver``:
                    The device uses this driver during commissioning.'
                  type: string
                dry_run:
                  description: Optional boolean to indicate that the machine should
                    not actually be acquired (this is for support/troubleshooting,
                    or users who want to see which machine would match a constraint,
                    without acquiring a machine). Defaults to False.
                  type: boolean
                fabric_classes:
                  description: Set of fabric class types whose fabrics the machine
                    must be associated with in order to be acquired. If multiple fabrics
                    class types are specified, the machine can be in any matching
                    fabric. To request multiple possible fabrics class types to match,
                    this parameter must be repeated in the request with each value.
                  type: string
                fabrics:
                  description: Set of fabrics that the machine must be associated
                    with in order to be acquired. If multiple fabrics names are specified,
                    the machine can be in any of the specified fabrics. To request
                    multiple possible fabrics to match, this parameter must be repeated
                    in the request with each value.
                  type: string
                interfaces:
                  description: 'A labeled constraint map associating constraint labels
                    with interface properties that should be matched. Returned nodes
                    must have one or more interface matching the specified constraints.
                    The labeled constraint map must be in the format: ``label:key=value[,key2=value2[,...]]``.
                    Each key can be one of the following: - ``id``: Matches an interface
                    with the specific id - ``fabric``: Matches an interface attached
                    to the specified fabric. - ``fabric_class``: Matches an interface
                    attached to a fabric with the specified class. - ``ip``: Matches
                    an interface with the specified IP address assigned to it. - ``mode``:
                    Matches an interface with the specified mode. (Currently, the
                    only supported mode is "unconfigured".) - ``name``: Matches an
                    interface with the specified name. (For example, "eth0".) - ``hostname``:
                    Matches an interface attached to the node with the specified hostname.
                    - ``subnet``: Matches an interface attached to the specified subnet.
                    - ``space``: Matches an interface attached to the specified space.
                    - ``subnet_cidr``: Matches an interface attached to the specified
                    subnet CIDR. (For example, "192.168.0.0/24".) - ``type``: Matches
                    an interface of the specified type. (Valid types: "physical",
                    "vlan", "bond", "bridge", or "unknown".) - ``vlan``: Matches an
                    interface on the specified VLAN. - ``vid``: Matches an interface
                    on a VLAN with the specified VID. - ``tag``: Matches an interface
                    tagged with the specified tag. - ``link_speed``: Matches an interface
                    with link_speed equal to or greater than the specified speed.'
                  type: string
                mem:
                  description: The minimum amount of memory (expressed in MB) the
                    returned machine must have. A machine with additional memory may
                    be allocated if there is no exact match, or the 'cpu_count' constraint
                    is not also specified.
                  type: integer
                name:
                  description: Hostname or FQDN of the desired machine. If a FQDN
                    is specified, both the domain and the hostname portions must match.
                  type: string
                not_fabric_classes:
                  description: Fabric class types whose fabrics the machine must NOT
                    be associated with in order to be acquired. If multiple fabrics
                    names are specified, the machine must NOT be in ANY of them. To
                    request exclusion of multiple fabrics, this parameter must be
                    repeated in the request with each value.
                  type: string
                not_fabrics:
                  description: Fabrics the machine must NOT be associated with in
                    order to be acquired. If multiple fabrics names are specified,
                    the machine must NOT be in ANY of them. To request exclusion of
                    multiple fabrics, this parameter must be repeated in the request
                    with each value.
                  type: string
                not_in_pool:
                  description: List of resource pool from which the machine must not
                    be acquired. If multiple pools are specified, the machine must
                    NOT be associated with ANY of them. To request multiple pools
                    to exclude, this parameter must be repeated in the request with
                    each value.
                  type: string
                not_in_zone:
                  description: List of physical zones from which the machine must
                    not be acquired. If multiple zones are specified, the machine
                    must NOT be associated with ANY of them. To request multiple zones
                    to exclude, this parameter must be repeated in the request with
                    each value.
                  type: string
                not_pod:
                  description: Pod the machine must not be located in.
                  type: string
                not_pod_type:
                  description: Pod type the machine must not be located in.
                  type: string
                not_subnets:
                  description: Subnets that must NOT be linked to the machine. See
                    the 'subnets' constraint documentation above for more information
                    about how each subnet can be specified. If multiple subnets are
                    specified, the machine must NOT be associated with ANY of them.
                    To request multiple subnets to exclude, this parameter must be
                    repeated in the request with each value. (Or a fabric, space,
                    or VLAN specifier may be used to match multiple subnets). Note
                    that this replaces the legacy 'not_networks' constraint in MAAS
                    1.x.
                  type: string
                not_tags:
                  description: Tags the machine must NOT match. If multiple tag names
                    are specified, the machine must NOT be tagged with ANY of them.
                    To request exclusion of multiple tags, this parameter must be
                    repeated in the request with each value.
                  type: string
                pod:
                  description: Pod the machine must be located in.
                  type: string
                pod_type:
                  description: Pod type the machine must be located in.
                  type: string
                pool:
                  description: Resource pool name the machine must belong to.
                  type: string
                storage:
                  description: 'A list of storage constraint identifiers, in the form:
                    ``label:size(tag[,tag[,...])][,label:...]``.'
                  type: string
                subnets:
                  description: 'Subnets that must be linked to the machine. "Linked
                    to" means the node must be configured to acquire an address in
                    the specified subnet, have a static IP address in the specified
                    subnet, or have been observed to DHCP from the specified subnet
                    during commissioning time (which implies that it *could* have
                    an address on the specified subnet). Subnets can be specified
                    by one of the following criteria: - <id>: Match the subnet by
                    its ''id'' field - fabric:<fabric-spec>: Match all subnets in
                    a given fabric. - ip:<ip-address>: Match the subnet containing
                    <ip-address> with the with the longest-prefix match. - name:<subnet-name>:
                    Match a subnet with the given name. - space:<space-spec>: Match
                    all subnets in a given space. - vid:<vid-integer>: Match a subnet
                    on a VLAN with the specified VID. Valid values range from 0 through
                    4094 (inclusive). An untagged VLAN can be specified by using the
                    value "0". - vlan:<vlan-spec>: Match all subnets on the given
                    VLAN. Note that (as of this writing), the ''fabric'', ''space'',
                    ''vid'', and ''vlan'' specifiers are only useful for the ''not_spaces''
                    version of this constraint, because they will most likely force
                    the query to match ALL the subnets in each fabric, space, or VLAN,
                    and thus not return any nodes. (This is not a particularly useful
                    behavior, so may be changed in the future.) If multiple subnets
                    are specified, the machine must be associated with all of them.
                    To request multiple subnets, this parameter must be repeated in
                    the request with each value. Note that this replaces the legacy
                    ''networks'' constraint in MAAS 1.x.'
                  type: string
                system_id:
                  description: system_id of the desired machine.
                  type: string
                tags:
                  description: Tags the machine must match in order to be acquired.
                    If multiple tag names are specified, the machine must be tagged
                    with all of them. To request multiple tags, this parameter must
                    be repeated in the request with each value.
                  type: string
                verbose:
                  description: Optional boolean to indicate that the user would like
                    additional verbosity in the constraints_by_type field (each constraint
                    will be prefixed by ``verbose_``, and contain the full data structure
                    that indicates which machine(s) matched).
                  type: boolean
                zone:
                  description: Physical zone name the machine must be located in.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a newly allocated machine object.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: No machine matching the given constraints could be found.
      summary: Allocate a machine
      tags:
      - Machines
  /machines/op-clone:
    post:
      description: 'Clone storage and/or interface configurations A machine storage
        and/or interface configuration can be cloned to a set of destination machines.


        For storage configuration, cloning the destination machine must have at least
        the same number of physical block devices or more, along with the physical
        block devices being the same size or greater.


        For interface configuration, cloning the destination machine must have at
        least the same number of interfaces with the same names. The destination machine
        can have more interfaces than the source, as long as the subset of interfaces
        on the destination have the same matching names as the source.'
      operationId: MachinesHandler_clone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                destinations:
                  description: A list of system_ids to clone the configuration to.
                  type: string
                interfaces:
                  description: Whether to clone interface configuration. Defaults
                    to False.
                  type: boolean
                source:
                  description: The system_id of the machine that is the source of
                    the configuration.
                  type: string
                storage:
                  description: Whether to clone storage configuration. Defaults to
                    False.
                  type: boolean
              required:
              - source
              - destinations
              - interfaces
              - storage
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: Source and/or destinations are not found.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user not authenticated.
      summary: Clone storage and/or interface configurations
      tags:
      - Machines
  /machines/op-is_registered:
    get:
      description: Returns whether or not the given MAC address is registered within
        this MAAS (and attached to a non-retired node).
      operationId: MachinesHandler_is_registered
      responses:
        '200':
          description: '''true'' or ''false'''
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: mac_address was missing
      summary: MAC address registered
      tags:
      - Machines
  /machines/op-list_allocated:
    get:
      description: List machines that were allocated to the User.
      operationId: MachinesHandler_list_allocated
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of allocated machines.
      summary: List allocated
      tags:
      - Machines
  /machines/op-power_parameters:
    get:
      description: 'Get power parameters for multiple machines. To request power parameters
        for a specific machine or more than one machine: ``op=power_parameters&id=abc123&id=def456``.'
      operationId: MachinesHandler_power_parameters
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of power parameters with system_ids
            as keys.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to view the power parameters.
      summary: Get power parameters
      tags:
      - Machines
  /machines/op-release:
    post:
      description: Release multiple machines. Places the machines back into the pool,
        ready to be reallocated.
      operationId: MachinesHandler_release
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log.
                  type: string
                machines:
                  description: A list of system_ids of the machines which are to be
                    released. (An empty list is acceptable).
                  type: string
              required:
              - machines
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of release machines.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: One or more of the given machines is not found.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to release machines.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The current state of the machine prevents it from being released.
      summary: Release machines
      tags:
      - Machines
  /machines/op-set_zone:
    post:
      description: Assigns a given node to a given zone.
      operationId: MachinesHandler_set_zone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                nodes:
                  description: The node to add.
                  type: string
                zone:
                  description: The zone name.
                  type: string
              required:
              - zone
              - nodes
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The given parameters were not correct.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
      summary: Assign nodes to a zone
      tags:
      - Machines
  /machines/{system_id}/:
    delete:
      description: 'Deletes a machine with the given system_id.


        Note: A machine cannot be deleted if it hosts pod virtual machines.

        Use ``force`` to override this behavior. Forcing deletion will also remove
        hosted pods. E.g. ``/machines/abc123/?force=1``.'
      operationId: MachineHandler_delete
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The machine cannot be deleted.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to delete this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested static-route is not found.
      summary: Delete a machine
      tags:
      - Machine
    get:
      description: Reads a node with the given system_id.
      operationId: MachineHandler_read
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Read a node
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    put:
      description: Updates a machine with the given system_id.
      operationId: MachineHandler_update
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                architecture:
                  description: The new architecture for this machine.
                  type: string
                cpu_count:
                  description: The amount of CPU cores the machine has.
                  type: integer
                description:
                  description: The new description for this machine.
                  type: string
                disable_ipv4:
                  description: Deprecated. If specified, must be false.
                  type: boolean
                domain:
                  description: The domain for this machine. If not given the default
                    domain is used.
                  type: string
                hostname:
                  description: The new hostname for this machine.
                  type: string
                memory:
                  description: How much memory the machine has. Field accept K, M,
                    G and T suffixes for values expressed respectively in kilobytes,
                    megabytes, gigabytes and terabytes.
                  type: string
                min_hwe_kernel:
                  description: A string containing the minimum kernel version allowed
                    to be ran on this machine.
                  type: string
                pool:
                  description: The resource pool to which the machine should belong.
                    All machines belong to the 'default' resource pool if they do
                    not belong to any other resource pool.
                  type: string
                power_parameters_skip_check:
                  description: Whether or not the new power parameters for this machine
                    should be checked against the expected power parameters for the
                    machine's power type ('true' or 'false'). The default is 'false'.
                  type: boolean
                power_parameters_{param1:
                  description: The new value for the 'param1' power parameter. Note
                    that this is dynamic as the available parameters depend on the
                    selected value of the Machine's power_type. Available to admin
                    users. See the `Power types`_ section for a list of the available
                    power parameters for each power type.
                  type: string
                power_type:
                  description: The new power type for this machine. If you use the
                    default value, power_parameters will be set to the empty string.
                    Available to admin users. See the `Power types`_ section for a
                    list of the available power types.
                  type: string
                swap_size:
                  description: Specifies the size of the swap file, in bytes. Field
                    accept K, M, G and T suffixes for values expressed respectively
                    in kilobytes, megabytes, gigabytes and terabytes.
                  type: string
                zone:
                  description: Name of a valid physical zone in which to place this
                    machine.
                  type: string
              required:
              - power_parameters_{param1
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to update this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Update a machine
      tags:
      - Machine
  /machines/{system_id}/op-abort:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Abort a node's current operation.
      operationId: MachineHandler_abort
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to abort the current operation.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Abort a node operation
      tags:
      - Machine
  /machines/{system_id}/op-clear_default_gateways:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Clear any set default gateways on a machine with the given system_id.


        This will clear both IPv4 and IPv6 gateways on the machine. This will transition
        the logic of identifing the best gateway to MAAS. This logic is determined
        based the following criteria: 1. Managed subnets over unmanaged subnets.

        2. Bond interfaces over physical interfaces.

        3. Machine''s boot interface over all other interfaces except bonds.

        4. Physical interfaces over VLAN interfaces.

        5. Sticky IP links over user reserved IP links.

        6. User reserved IP links over auto IP links.


        If the default gateways need to be specific for this machine you can set which
        interface and subnet''s gateway to use when this machine is deployed with
        the `interfaces set-default-gateway` API.'
      operationId: MachineHandler_clear_default_gateways
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to clear default gateways
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Clear set default gateways
      tags:
      - Machine
  /machines/{system_id}/op-commission:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Begin commissioning process for a machine.


        A machine in the ''ready'', ''declared'' or ''failed test'' state may initiate
        a commissioning cycle where it is checked out and tested in preparation for
        transitioning to the ''ready'' state. If it is already in the ''ready'' state
        this is considered a re-commissioning process which is useful if commissioning
        tests were changed after it previously commissioned.'
      operationId: MachineHandler_commission
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                commissioning_scripts:
                  description: A comma seperated list of commissioning script names
                    and tags to be run. By default all custom commissioning scripts
                    are run. Built-in commissioning scripts always run. Selecting
                    'update_firmware' or 'configure_hba' will run firmware updates
                    or configure HBA's on matching machines.
                  type: string
                enable_ssh:
                  description: Whether to enable SSH for the commissioning environment
                    using the user's SSH key(s). '1' == True, '0' == False.
                  type: integer
                parameters:
                  description: Scripts selected to run may define their own parameters.
                    These parameters may be passed using the parameter name. Optionally
                    a parameter may have the script name prepended to have that parameter
                    only apply to that specific script.
                  type: string
                skip_bmc_config:
                  description: Whether to skip re-configuration of the BMC for IPMI
                    based machines. '1' == True, '0' == False.
                  type: integer
                skip_networking:
                  description: Whether to skip re-configuring the networking on the
                    machine after the commissioning has completed. '1' == True, '0'
                    == False.
                  type: integer
                skip_storage:
                  description: Whether to skip re-configuring the storage on the machine
                    after the commissioning has completed. '1' == True, '0' == False.
                  type: integer
                testing_scripts:
                  description: A comma seperated list of testing script names and
                    tags to be run. By default all tests tagged 'commissioning' will
                    be run. Set to 'none' to disable running tests.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the commissioning
            machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Commission a machine
      tags:
      - Machine
  /machines/{system_id}/op-deploy:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Deploys an operating system to a machine with the given system_id.
      operationId: MachineHandler_deploy
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                agent_name:
                  description: An optional agent name to attach to the acquired machine.
                  type: string
                bridge_all:
                  description: 'Optionally create a bridge interface for every configured
                    interface on the machine. The created bridges will be removed
                    once the machine is released. (Default: false)'
                  type: boolean
                bridge_fd:
                  description: 'Optionally adjust the forward delay to time seconds.
                    (Default: 15)'
                  type: integer
                bridge_stp:
                  description: 'Optionally turn spanning tree protocol on or off for
                    the bridges created on every configured interface. (Default: false)'
                  type: boolean
                bridge_type:
                  description: 'Optionally create the bridges with this type. Possible
                    values are: ``standard``, ``ovs``.'
                  type: string
                comment:
                  description: Optional comment for the event log.
                  type: string
                distro_series:
                  description: If present, this parameter specifies the OS release
                    the machine will use.
                  type: string
                enable_hw_sync:
                  description: If true, machine will be deployed with a small agent
                    periodically pushing hardware data to detect any change in devices.
                  type: boolean
                ephemeral_deploy:
                  description: If true, machine will be deployed ephemerally even
                    if it has disks.
                  type: boolean
                hwe_kernel:
                  description: If present, this parameter specified the kernel to
                    be used on the machine
                  type: string
                install_kvm:
                  description: If true, KVM will be installed on this machine and
                    added to MAAS.
                  type: boolean
                install_rackd:
                  description: If true, the rack controller will be installed on this
                    machine.
                  type: boolean
                osystem:
                  description: If present, this parameter specifies the OS the machine
                    will use.
                  type: string
                register_vmhost:
                  description: If true, the machine will be registered as a LXD VM
                    host in MAAS.
                  type: boolean
                user_data:
                  description: If present, this blob of base64-encoded user-data to
                    be made available to the machines through the metadata service.
                  type: string
                vcenter_registration:
                  description: If false, do not send globally defined VMware vCenter
                    credentials to the machine.
                  type: boolean
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the deployed machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to deploy this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: MAAS attempted to allocate an IP address, and there were no
            IP addresses available on the relevant cluster interface.
      summary: Deploy a machine
      tags:
      - Machine
  /machines/{system_id}/op-details:
    get:
      description: 'Returns system details -- for example, LLDP and ``lshw`` XML dumps.


        Returns a ``{detail_type: xml, ...}`` map, where ``detail_type`` is something
        like "lldp" or "lshw".


        Note that this is returned as BSON and not JSON. This is for efficiency, but
        mainly because JSON can''t do binary content without applying additional encoding
        like base-64. The example output below is represented in ASCII using ``bsondump
        example.bson`` and is for demonstrative purposes.'
      operationId: MachineHandler_details
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A BSON object represented here in ASCII using ``bsondump example.bson``.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get system details
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /machines/{system_id}/op-exit_rescue_mode:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Exits the rescue mode process on a machine with the given system_id.


        A machine in the ''rescue mode'' state may exit the rescue mode process.'
      operationId: MachineHandler_exit_rescue_mode
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to exit rescue mode on the
            machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Exit rescue mode
      tags:
      - Machine
  /machines/{system_id}/op-get_curtin_config:
    get:
      description: Return the rendered curtin configuration for the machine.
      operationId: MachineHandler_get_curtin_config
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the curtin configuration.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see curtin configuration
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Get curtin configuration
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /machines/{system_id}/op-get_token:
    get:
      description: 'Manage an individual machine.


        A machine is identified by its system_id.'
      operationId: MachineHandler_get_token
      parameters:
      - description: The machines' system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the machine token.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Get a machine token
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /machines/{system_id}/op-lock:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Mark a machine with the given system_id as 'Locked' to prevent
        changes.
      operationId: MachineHandler_lock
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to lock the machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Lock a machine
      tags:
      - Machine
  /machines/{system_id}/op-mark_broken:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Mark a machine with the given system_id as ''Broken''.


        If the node is allocated, release it first.'
      operationId: MachineHandler_mark_broken
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log. Will be displayed
                    on the node as an error description until marked fixed.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to the machine as Broken.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Mark a machine as Broken
      tags:
      - Machine
  /machines/{system_id}/op-mark_fixed:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Mark a machine with the given system_id as 'Fixed'.
      operationId: MachineHandler_mark_fixed
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to the machine as Fixed.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Mark a machine as Fixed
      tags:
      - Machine
  /machines/{system_id}/op-mount_special:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Mount a special-purpose filesystem, like tmpfs on a machine with
        the given system_id.
      operationId: MachineHandler_mount_special
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                fstype:
                  description: The filesystem type. This must be a filesystem that
                    does not require a block special device.
                  type: string
                mount_option:
                  description: Options to pass to mount(8).
                  type: string
                mount_point:
                  description: Path on the filesystem to mount.
                  type: string
              required:
              - fstype
              - mount_point
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to mount the special filesystem
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Mount a special-purpose filesystem
      tags:
      - Machine
  /machines/{system_id}/op-override_failed_testing:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Ignore failed tests and put node back into a usable state.
      operationId: MachineHandler_override_failed_testing
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to override tests.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Ignore failed tests
      tags:
      - Machine
  /machines/{system_id}/op-power_off:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Powers off a given node.
      operationId: MachineHandler_power_off
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
                stop_mode:
                  description: Power-off mode. If 'soft', perform a soft power down
                    if the node's power type supports it, otherwise perform a hard
                    power off. For all values other than 'soft', and by default, perform
                    a hard power off. A soft power off generally asks the OS to shutdown
                    the system gracefully before powering off, while a hard power
                    off occurs immediately without any warning to the OS.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to power off the node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Power off a node
      tags:
      - Machine
  /machines/{system_id}/op-power_on:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Turn on the given node with optional user-data and comment.
      operationId: MachineHandler_power_on
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
                user_data:
                  description: Base64-encoded blob of data to be made available to
                    the nodes through the metadata service.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to power on the node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: Returns 503 if the start-up attempted to allocate an IP address,
            and there were no IP addresses available on the relevant cluster interface.
      summary: Turn on a node
      tags:
      - Machine
  /machines/{system_id}/op-power_parameters:
    get:
      description: 'Gets power parameters for a given system_id, if any. For some
        types of power control this will include private information such as passwords
        and secret keys.


        Note that this method is reserved for admin users and returns a 403 if the
        user is not one.'
      operationId: MachineHandler_power_parameters
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see the power parameters.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get power parameters
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /machines/{system_id}/op-query_power_state:
    get:
      description: 'Gets the power state of a given node. MAAS sends a request to
        the node''s power controller, which asks it about the node''s state.

        The reply to this could be delayed by up to 30 seconds while waiting for the
        power controller to respond.  Use this method sparingly as it ties up an appserver
        thread while waiting.'
      operationId: MachineHandler_query_power_state
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's power state.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get the power state of a node
      tags:
      - Machine
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /machines/{system_id}/op-release:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Releases a machine with the given system_id. Note that this operation
        is the opposite of allocating a machine.


        **Erasing drives**: If neither ``secure_erase`` nor ``quick_erase`` are specified,
        MAAS will overwrite the whole disk with null bytes. This can be very slow.


        If both ``secure_erase`` and ``quick_erase`` are specified and the drive does
        NOT have a secure erase feature, MAAS will behave as if only ``quick_erase``
        was specified.


        If ``secure_erase`` is specified and ``quick_erase`` is NOT specified and
        the drive does NOT have a secure erase feature, MAAS will behave as if ``secure_erase``
        was NOT specified, i.e. MAAS will overwrite the whole disk with null bytes.
        This can be very slow.'
      operationId: MachineHandler_release
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log.
                  type: string
                erase:
                  description: Erase the disk when releasing.
                  type: boolean
                force:
                  description: Will force the release of a machine. If the machine
                    was deployed as a KVM host, this will be deleted as well as all
                    machines inside the KVM host. USE WITH CAUTION.
                  type: boolean
                quick_erase:
                  description: Wipe 2MiB at the start and at the end of the drive
                    to make data recovery inconvenient and unlikely to happen by accident.
                    This is not secure.
                  type: boolean
                secure_erase:
                  description: Use the drive's secure erase feature if available.
                    In some cases, this can be much faster than overwriting the drive.
                    Some drives implement secure erasure by overwriting themselves
                    so this could still be slow.
                  type: boolean
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the released machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to release this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The machine is in a state that prevents it from being released.
      summary: Release a machine
      tags:
      - Machine
  /machines/{system_id}/op-rescue_mode:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Begins the rescue mode process on a machine with the given system_id.


        A machine in the ''deployed'' or ''broken'' state may initiate the rescue
        mode process.'
      operationId: MachineHandler_rescue_mode
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to begin rescue mode on the
            machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Enter rescue mode
      tags:
      - Machine
  /machines/{system_id}/op-restore_default_configuration:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Restores the default configuration options on a machine with the
        given system_id.
      operationId: MachineHandler_restore_default_configuration
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to restore default options
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Restore default configuration
      tags:
      - Machine
  /machines/{system_id}/op-restore_networking_configuration:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Restores networking options to their initial state on a machine
        with the given system_id.
      operationId: MachineHandler_restore_networking_configuration
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to restore networking options
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Restore networking options
      tags:
      - Machine
  /machines/{system_id}/op-restore_storage_configuration:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Restores storage configuration options to their initial state on
        a machine with the given system_id.
      operationId: MachineHandler_restore_storage_configuration
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to restore storage options
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Restore storage configuration
      tags:
      - Machine
  /machines/{system_id}/op-set_owner_data:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      deprecated: true
      description: Deprecated, use set-workload-annotations instead.
      operationId: MachineHandler_set_owner_data
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Deprecated, use set-workload-annotations.
      tags:
      - Machine
  /machines/{system_id}/op-set_storage_layout:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Changes the storage layout on machine with the given system_id.


        This operation can only be performed on a machine with a status of ''Ready''.


        Note: This will clear the current storage layout and any extra configuration
        and replace it will the new layout.'
      operationId: MachineHandler_set_storage_layout
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                boot_size:
                  description: Size of the boot partition (e.g. 512M, 1G).
                  type: string
                cache_device:
                  description: Bcache only. Physical block device to use as the cache
                    device (e.g. /dev/sda).
                  type: string
                cache_mode:
                  description: 'Bcache only. Cache mode for bcache device: ``writeback``,
                    ``writethrough``, ``writearound``.'
                  type: string
                cache_no_part:
                  description: Bcache only. Don't create a partition on the cache
                    device. Use the entire disk as the cache device.
                  type: boolean
                cache_size:
                  description: Bcache only. Size of the cache partition to create
                    on the cache device (e.g. 48G).
                  type: string
                lv_name:
                  description: LVM only. Name of created logical volume.
                  type: string
                lv_size:
                  description: LVM only. Size of created logical volume.
                  type: string
                root_device:
                  description: Physical block device to place the root partition (e.g.
                    /dev/sda).
                  type: string
                root_size:
                  description: Size of the root partition (e.g. 24G).
                  type: string
                storage_layout:
                  description: 'Storage layout for the machine: ``flat``, ``lvm``,
                    ``bcache``, ``vmfs6``, ``vmfs7``, ``custom`` or ``blank``.'
                  type: string
                vg_name:
                  description: LVM only. Name of created volume group.
                  type: string
              required:
              - storage_layout
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the machine.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not allocated.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to set the storage layout
            of this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Change storage layout
      tags:
      - Machine
  /machines/{system_id}/op-set_workload_annotations:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Set key=value data for the current owner.


        Pass any key=value form data to this method to add, modify, or remove.

        A key is removed when the value for that key is set to an empty string.


        This operation will not remove any previous keys unless explicitly passed
        with an empty string. All workload annotations are removed when the machine
        is no longer allocated to a user.'
      operationId: MachineHandler_set_workload_annotations
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                key:
                  description: '``key`` can be any string value.'
                  type: string
              required:
              - key
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Set key=value data
      tags:
      - Machine
  /machines/{system_id}/op-test:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Begins the testing process for a given node.


        A node in the ''ready'', ''allocated'', ''deployed'', ''broken'', or any failed
        state may run tests. If testing is started and successfully passes from ''broken''
        or any failed state besides ''failed commissioning'' the node will be returned
        to a ready state. Otherwise the node will return to the state it was when
        testing started.'
      operationId: MachineHandler_test
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                enable_ssh:
                  description: Whether to enable SSH for the testing environment using
                    the user's SSH key(s). 0 == false. 1 == true.
                  type: integer
                parameters:
                  description: Scripts selected to run may define their own parameters.
                    These parameters may be passed using the parameter name. Optionally
                    a parameter may have the script name prepended to have that parameter
                    only apply to that specific script.
                  type: string
                testing_scripts:
                  description: A comma-separated list of testing script names and
                    tags to be run. By default all tests tagged 'commissioning' will
                    be run.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Begin testing process for a node
      tags:
      - Machine
  /machines/{system_id}/op-unlock:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Mark a machine with the given system_id as 'Unlocked' to allow
        changes.
      operationId: MachineHandler_unlock
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Optional comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the machine information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to unlock the machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Unlock a machine
      tags:
      - Machine
  /machines/{system_id}/op-unmount_special:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Unmount a special-purpose filesystem, like tmpfs, on a machine
        with the given system_id.
      operationId: MachineHandler_unmount_special
      parameters:
      - description: The machines's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                mount_point:
                  description: Path on the filesystem to unmount.
                  type: string
              required:
              - mount_point
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the machine.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to unmount the special filesystem
            on this machine.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Unmount a special-purpose filesystem
      tags:
      - Machine
  /networks/:
    get:
      deprecated: true
      description: 'Manage the networks.


        The ''Networks'' endpoint has been deprecated in favour of ''Subnets''.'
      operationId: NetworksHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing list of all known subnets.
      summary: NetworksHandler read
      tags:
      - Networks (deprecated)
    post:
      deprecated: true
      description: 'Manage the networks.


        The ''Networks'' endpoint has been deprecated in favour of ''Subnets''.'
      operationId: NetworksHandler_create
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new subnet.
      summary: NetworksHandler create
      tags:
      - Networks (deprecated)
  /networks/{name}/:
    delete:
      deprecated: true
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_delete
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: NetworkHandler delete
      tags:
      - Network (deprecated)
    get:
      deprecated: true
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the subnet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: NetworkHandler read
      tags:
      - Network (deprecated)
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    put:
      deprecated: true
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_update
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated subnet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: NetworkHandler update
      tags:
      - Network (deprecated)
  /networks/{name}/op-connect_macs:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_connect_macs
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '''str'' object has no attribute ''user'''
      summary: NetworkHandler connect_macs
      tags:
      - Network (deprecated)
  /networks/{name}/op-disconnect_macs:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_disconnect_macs
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '''str'' object has no attribute ''user'''
      summary: NetworkHandler disconnect_macs
      tags:
      - Network (deprecated)
  /networks/{name}/op-list_connected_macs:
    get:
      description: 'Manage a network.


        The ''Network'' endpoint has been deprecated in favour of ''Subnet''.'
      operationId: NetworkHandler_list_connected_macs
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No Subnet matches the given query.
      summary: NetworkHandler list_connected_macs
      tags:
      - Network (deprecated)
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /nodes/:
    get:
      description: 'List nodes visible to current user, optionally filtered by criteria.


        Nodes are sorted by id (i.e. most recent last) and grouped by type.'
      operationId: NodesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of node objects.
      summary: List Nodes visible to the user
      tags:
      - Nodes
  /nodes/op-is_registered:
    get:
      description: Returns whether or not the given MAC address is registered within
        this MAAS (and attached to a non-retired node).
      operationId: NodesHandler_is_registered
      responses:
        '200':
          description: '''true'' or ''false'''
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: mac_address was missing
      summary: MAC address registered
      tags:
      - Nodes
  /nodes/op-set_zone:
    post:
      description: Assigns a given node to a given zone.
      operationId: NodesHandler_set_zone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                nodes:
                  description: The node to add.
                  type: string
                zone:
                  description: The zone name.
                  type: string
              required:
              - zone
              - nodes
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The given parameters were not correct.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
      summary: Assign nodes to a zone
      tags:
      - Nodes
  /nodes/{system_id}/:
    delete:
      description: Deletes a node with a given system_id.
      operationId: NodeHandler_delete
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to delete the node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Delete a node
      tags:
      - Node
    get:
      description: Reads a node with the given system_id.
      operationId: NodeHandler_read
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Read a node
      tags:
      - Node
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/bcache-cache-set/{id}/:
    delete:
      description: Delete bcache cache set on a machine.
      operationId: BcacheCacheSetHandler_delete
      parameters:
      - description: A machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A cache_set_id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The cache set is in use.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete a bcache set
      tags:
      - Bcache Cache Set
    get:
      description: Read bcache cache set on a machine.
      operationId: BcacheCacheSetHandler_read
      parameters:
      - description: A machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A cache_set_id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a bcache set.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Read a bcache cache set
      tags:
      - Bcache Cache Set
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update bcache cache set on a machine.


        Note: specifying both a cache_device and a cache_partition is not allowed.'
      operationId: BcacheCacheSetHandler_update
      parameters:
      - description: A machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A cache_set_id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                cache_device:
                  description: Cache block device to replace current one.
                  type: string
                cache_partition:
                  description: Cache partition to replace current one.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a bcache set.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a bcache set
      tags:
      - Bcache Cache Set
  /nodes/{system_id}/bcache-cache-sets/:
    get:
      description: List all bcache cache sets belonging to a machine.
      operationId: BcacheCacheSetsHandler_read
      parameters:
      - description: A machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of bcache sets.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List bcache sets
      tags:
      - Bcache Cache Sets
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Creates a bcache cache set.


        Note: specifying both a cache_device and a cache_partition is not allowed.'
      operationId: BcacheCacheSetsHandler_create
      parameters:
      - description: A machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                cache_device:
                  description: Cache block device.
                  type: string
                cache_partition:
                  description: Cache partition.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new bcache set.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Creates a bcache cache set
      tags:
      - Bcache Cache Sets
  /nodes/{system_id}/bcache/{id}/:
    delete:
      description: Delete bcache on a machine.
      operationId: BcacheHandler_delete
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The bcache id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested id or system_id is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete a bcache
      tags:
      - Bcache Device
    get:
      description: Read bcache device on a machine.
      operationId: BcacheHandler_read
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The bcache id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the bcache device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or bcache id is not found.
      summary: Read a bcache device
      tags:
      - Bcache Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update bcache on a machine.


        Specifying both a device and a partition for a given role (cache or backing)
        is not allowed.'
      operationId: BcacheHandler_update
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The bcache id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                backing_device:
                  description: Backing block device to replace current one.
                  type: string
                backing_partition:
                  description: Backing partition to replace current one.
                  type: string
                cache_mode:
                  description: 'Cache mode: ``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.'
                  type: string
                cache_set:
                  description: Cache set to replace current one.
                  type: string
                name:
                  description: Name of the Bcache.
                  type: string
                uuid:
                  description: UUID of the Bcache.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new bcache device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested id or system_id is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a bcache
      tags:
      - Bcache Device
  /nodes/{system_id}/bcaches/:
    get:
      description: List all bcache devices belonging to a machine.
      operationId: BcachesHandler_read
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of bcache devices.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested system_id is not found.
      summary: List all bcache devices
      tags:
      - Bcache Devices
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Creates a bcache.


        Specifying both a device and a partition for a given role (cache or backing)
        is not allowed.'
      operationId: BcachesHandler_create
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                backing_device:
                  description: Backing block device.
                  type: string
                backing_partition:
                  description: Backing partition.
                  type: string
                cache_mode:
                  description: 'Cache mode: ``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.'
                  type: string
                cache_set:
                  description: Cache set.
                  type: string
                name:
                  description: Name of the Bcache.
                  type: string
                uuid:
                  description: UUID of the Bcache.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new bcache device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested system_id is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Creates a bcache
      tags:
      - Bcache Devices
  /nodes/{system_id}/blockdevices/:
    get:
      description: List all block devices belonging to a machine.
      operationId: BlockDevicesHandler_read
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of block devices.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List block devices
      tags:
      - Block devices
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Create a physical block device.
      operationId: BlockDevicesHandler_create
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                block_size:
                  description: Block size of the block device.
                  type: string
                id_path:
                  description: Only used if model and serial cannot be provided. This
                    should be a path that is fixed and doesn't change depending on
                    the boot order or kernel version.
                  type: string
                model:
                  description: Model of the block device.
                  type: string
                name:
                  description: Name of the block device.
                  type: string
                serial:
                  description: Serial number of the block device.
                  type: string
                size:
                  description: Size of the block device.
                  type: string
              required:
              - name
              - size
              - block_size
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Create a block device
      tags:
      - Block devices
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}:
    delete:
      description: Delete the partition from machine system_id and device device_id
        with the given partition id.
      operationId: PartitionHandler_delete
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Delete a partition
      tags:
      - Partitions
    get:
      description: Read the partition from machine system_id and device device_id
        with the given partition id.
      operationId: PartitionHandler_read
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested partition object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Read a partition
      tags:
      - Partitions
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-add_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Add a tag to a partition on machine system_id, device device_id
        and partition id.
      operationId: PartitionHandler_add_tag
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being added.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to add a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Add a tag
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-format:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Format the partition on machine system_id and device device_id
        with the given partition id.
      operationId: PartitionHandler_format
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                fstype:
                  description: Type of filesystem.
                  type: string
                label:
                  description: The label for the filesystem.
                  type: string
                uuid:
                  description: The UUID for the filesystem.
                  type: string
              required:
              - fstype
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to format the partition.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Format a partition
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-mount:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Mount a filesystem on machine system_id, device device_id and partition
        id.
      operationId: PartitionHandler_mount
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                mount_options:
                  description: Options to pass to mount(8).
                  type: string
                mount_point:
                  description: Path on the filesystem to mount.
                  type: string
              required:
              - mount_point
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to mount the filesystem.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Mount a filesystem
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-remove_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Remove a tag from a partition on machine system_id, device device_id
        and partition id.
      operationId: PartitionHandler_remove_tag
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being removed.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to remove a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Remove a tag
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-unformat:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Unformat the partition on machine system_id and device device_id
        with the given partition id.
      operationId: PartitionHandler_unformat
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Unformat a partition
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partition/{id}op-unmount:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Unmount a filesystem on machine system_id, device device_id and
        partition id.
      operationId: PartitionHandler_unmount
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      - description: The partition id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated partition object.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The partition is not formatted or not currently mounted.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to unmount the filesystem.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine, device or partition is not found.
      summary: Unmount a filesystem
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{device_id}/partitions/:
    get:
      description: List partitions on a device with the given system_id and device_id.
      operationId: PartitionsHandler_read
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of partition objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or device is not found.
      summary: List partitions
      tags:
      - Partitions
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: device_id
      required: true
      schema:
        type: string
    post:
      description: Create a partition on a block device.
      operationId: PartitionsHandler_create
      parameters:
      - description: The system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device_id.
        in: path
        name: device_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                bootable:
                  description: If the partition should be marked bootable.
                  type: boolean
                size:
                  description: The size of the partition in bytes. If not specified,
                    all available space will be used.
                  type: integer
                uuid:
                  description: UUID for the partition. Only used if the partition
                    table type for the block device is GPT.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new partition object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or device is not found.
      summary: Create a partition
      tags:
      - Partitions
  /nodes/{system_id}/blockdevices/{id}/:
    delete:
      description: Delete block device on a given machine.
      operationId: BlockDeviceHandler_delete
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to delete the block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete a block device
      tags:
      - Block device
    get:
      description: Read a block device on a given machine.
      operationId: BlockDeviceHandler_read
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
      summary: Read a block device
      tags:
      - Block device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update block device on a given machine.


        Machines must have a status of Ready to have access to all options.

        Machines with Deployed status can only have the name, model, serial, and/or
        id_path updated for a block device. This is intented to allow a bad block
        device to be replaced while the machine remains deployed.'
      operationId: BlockDeviceHandler_update
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                block_size:
                  description: (Physical devices) Block size of the block device.
                  type: string
                id_path:
                  description: (Physical devices) Only used if model and serial cannot
                    be provided. This should be a path that is fixed and doesn't change
                    depending on the boot order or kernel version.
                  type: string
                model:
                  description: (Physical devices) Model of the block device.
                  type: string
                name:
                  description: (Virtual devices) Name of the block device.
                  type: string
                serial:
                  description: (Physical devices) Serial number of the block device.
                  type: string
                size:
                  description: (Virtual devices) Size of the block device. (Only allowed
                    for logical volumes.)
                  type: string
                uuid:
                  description: (Virtual devices) UUID of the block device.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to update the block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a block device
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-add_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Add a tag to block device on a given machine.
      operationId: BlockDeviceHandler_add_tag
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being added.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to add a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Add a tag
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-format:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Format block device with filesystem.
      operationId: BlockDeviceHandler_format
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                fstype:
                  description: Type of filesystem.
                  type: string
                uuid:
                  description: UUID of the filesystem.
                  type: string
              required:
              - fstype
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to format the block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Format block device
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-mount:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Mount the filesystem on block device.
      operationId: BlockDeviceHandler_mount
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                mount_options:
                  description: Options to pass to mount(8).
                  type: string
                mount_point:
                  description: Path on the filesystem to mount.
                  type: string
              required:
              - mount_point
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to mount the filesystem.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Mount a filesystem
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-remove_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Remove a tag from block device on a given machine.
      operationId: BlockDeviceHandler_remove_tag
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being removed.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to remove a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Remove a tag
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-set_boot_disk:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Set a block device as the boot disk for the machine.
      operationId: BlockDeviceHandler_set_boot_disk
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Boot disk set.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The block device is a virtual block device.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to set the boot disk.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Set boot disk
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-unformat:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Unformat a previously formatted block device.
      operationId: BlockDeviceHandler_unformat
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The block device is not formatted, currently mounted, or part
            of a filesystem group.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to unformat the block device.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Unformat a block device
      tags:
      - Block device
  /nodes/{system_id}/blockdevices/{id}/op-unmount:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Unmount the filesystem on block device.
      operationId: BlockDeviceHandler_unmount
      parameters:
      - description: The machine system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The block device's id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated block device.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The block device is not formatted or currently mounted.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permissions to mount the filesystem.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or block device is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Unmount a filesystem
      tags:
      - Block device
  /nodes/{system_id}/devices/:
    get:
      description: Return a list of devices attached to the node given by a system_id.
      operationId: NodeDevicesHandler_read
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of script result objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Return node devices
      tags:
      - Node Devices
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/devices/{id}/:
    delete:
      description: 'Delete a node device with the given system_id and id.

        If the device is still present in the system it will be recreated when the
        node is commissioned.'
      operationId: NodeDeviceHandler_delete
      parameters:
      - description: A system_id
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A node device id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node or node device is not found.
      summary: Delete a node device
      tags:
      - Node Device
    get:
      description: Return a node device with the given system_id and node device id.
      operationId: NodeDeviceHandler_read
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A node device id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new requested node device object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node or node device is not found.
      summary: Return a specific node device
      tags:
      - Node Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
  /nodes/{system_id}/interfaces/:
    get:
      description: List all interfaces belonging to a machine, device, or rack controller.
      operationId: InterfacesHandler_read
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of interface objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List interfaces
      tags:
      - Interfaces
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/interfaces/op-create_bond:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Create a bond interface on a machine.
      operationId: InterfacesHandler_create_bond
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_ra:
                  description: Accept router advertisements. (IPv6 only)
                  type: boolean
                autoconf:
                  description: Perform stateless autoconfiguration. (IPv6 only)
                  type: boolean
                bond_downdelay:
                  description: Specifies the time, in milliseconds, to wait before
                    disabling a slave after a link failure has been detected.
                  type: integer
                bond_lacp_rate:
                  description: 'Option specifying the rate at which to ask the link
                    partner to transmit LACPDU packets in 802.3ad mode. Available
                    options are ``fast`` or ``slow``. (Default: ``slow``).'
                  type: string
                bond_miimon:
                  description: 'The link monitoring freqeuncy in milliseconds. (Default:
                    100).'
                  type: integer
                bond_mode:
                  description: 'The operating mode of the bond. (Default: active-backup).
                    Supported bonding modes: - ``balance-rr``: Transmit packets in
                    sequential order from the first available slave through the last.
                    This mode provides load balancing and fault tolerance. - ``active-backup``:
                    Only one slave in the bond is active. A different slave becomes
                    active if, and only if, the active slave fails. The bond''s MAC
                    address is externally visible on only one port (network adapter)
                    to avoid confusing the switch. - ``balance-xor``: Transmit based
                    on the selected transmit hash policy. The default policy is a
                    simple [(source MAC address XOR''d with destination MAC address
                    XOR packet type ID) modulo slave count]. - ``broadcast``: Transmits
                    everything on all slave interfaces. This mode provides fault tolerance.
                    - ``802.3ad``: IEEE 802.3ad dynamic link aggregation. Creates
                    aggregation groups that share the same speed and duplex settings.
                    Uses all slaves in the active aggregator according to the 802.3ad
                    specification. - ``balance-tlb``: Adaptive transmit load balancing:
                    channel bonding that does not require any special switch support.
                    - ``balance-alb``: Adaptive load balancing: includes balance-tlb
                    plus receive load balancing (rlb) for IPV4 traffic, and does not
                    require any special switch support. The receive load balancing
                    is achieved by ARP negotiation.'
                  type: string
                bond_num_grat_arp:
                  description: 'The number of peer notifications (IPv4 ARP or IPv6
                    Neighbour Advertisements) to be issued after a failover. (Default:
                    1)'
                  type: integer
                bond_updelay:
                  description: Specifies the time, in milliseconds, to wait before
                    enabling a slave after a link recovery has been detected.
                  type: integer
                bond_xmit_hash_policy:
                  description: 'The transmit hash policy to use for slave selection
                    in balance-xor, 802.3ad, and tlb modes. Possible values are: ``layer2``,
                    ``layer2+3``, ``layer3+4``, ``encap2+3``, ``encap3+4``. (Default:
                    ``layer2``)'
                  type: string
                mac_address:
                  description: MAC address of the interface.
                  type: string
                mtu:
                  description: Maximum transmission unit.
                  type: integer
                name:
                  description: Name of the interface.
                  type: string
                parents:
                  description: Parent interface ids that make this bond.
                  type: integer
                tags:
                  description: Tags for the interface.
                  type: string
                vlan:
                  description: VLAN the interface is connected to. If not provided
                    then the interface is considered disconnected.
                  type: string
              required:
              - name
              - parents
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new bond interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Create a bond inteface
      tags:
      - Interfaces
  /nodes/{system_id}/interfaces/op-create_bridge:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Create a bridge interface on a machine.
      operationId: InterfacesHandler_create_bridge
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_ra:
                  description: Accept router advertisements. (IPv6 only)
                  type: boolean
                autoconf:
                  description: Perform stateless autoconfiguration. (IPv6 only)
                  type: boolean
                bridge_fd:
                  description: 'Set bridge forward delay to time seconds. (Default:
                    15).'
                  type: integer
                bridge_stp:
                  description: 'Turn spanning tree protocol on or off. (Default: False).'
                  type: boolean
                bridge_type:
                  description: 'The type of bridge to create. Possible values are:
                    ``standard``, ``ovs``.'
                  type: string
                mac_address:
                  description: MAC address of the interface.
                  type: string
                mtu:
                  description: Maximum transmission unit.
                  type: integer
                name:
                  description: Name of the interface.
                  type: string
                parent:
                  description: Parent interface id for this bridge interface.
                  type: integer
                tags:
                  description: Tags for the interface.
                  type: string
                vlan:
                  description: VLAN the interface is connected to.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new bridge interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Create a bridge interface
      tags:
      - Interfaces
  /nodes/{system_id}/interfaces/op-create_physical:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Create a physical interface on a machine and device.
      operationId: InterfacesHandler_create_physical
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_ra:
                  description: Accept router advertisements. (IPv6 only)
                  type: boolean
                autoconf:
                  description: Perform stateless autoconfiguration. (IPv6 only)
                  type: boolean
                mac_address:
                  description: MAC address of the interface.
                  type: string
                mtu:
                  description: Maximum transmission unit.
                  type: integer
                name:
                  description: Name of the interface.
                  type: string
                tags:
                  description: Tags for the interface.
                  type: string
                vlan:
                  description: Untagged VLAN the interface is connected to. If not
                    provided then the interface is considered disconnected.
                  type: string
              required:
              - mac_address
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Create a physical interface
      tags:
      - Interfaces
  /nodes/{system_id}/interfaces/op-create_vlan:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Create a VLAN interface on a machine.
      operationId: InterfacesHandler_create_vlan
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_ra:
                  description: Accept router advertisements. (IPv6 only)
                  type: boolean
                autoconf:
                  description: Perform stateless autoconfiguration. (IPv6 only)
                  type: boolean
                mtu:
                  description: Maximum transmission unit.
                  type: integer
                parent:
                  description: Parent interface id for this VLAN interface.
                  type: integer
                tags:
                  description: Tags for the interface.
                  type: string
                vlan:
                  description: Tagged VLAN the interface is connected to.
                  type: string
              required:
              - vlan
              - parent
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new VLAN interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Create a VLAN interface
      tags:
      - Interfaces
  /nodes/{system_id}/interfaces/{id}/:
    delete:
      description: Delete an interface with the given system_id and interface id.
      operationId: InterfaceHandler_delete
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Delete an interface
      tags:
      - Interface
    get:
      description: Read an interface with the given system_id and interface id.
      operationId: InterfaceHandler_read
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new requested interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Read an interface
      tags:
      - Interface
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update an interface with the given system_id and interface id.


        Note: machines must have a status of Ready or Broken to have access to all
        options. Machines with Deployed status can only have the name and/or mac_address
        updated for an interface. This is intented to allow a bad interface to be
        replaced while the machine remains deployed.'
      operationId: InterfaceHandler_update
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                accept_ra:
                  description: Accept router advertisements. (IPv6 only)
                  type: string
                autoconf:
                  description: Perform stateless autoconfiguration. (IPv6 only)
                  type: string
                bond_downdelay:
                  description: (Bonds) Specifies the time, in milliseconds, to wait
                    before disabling a slave after a link failure has been detected.
                  type: integer
                bond_lacp_rate:
                  description: '(Bonds) Option specifying the rate in which we''ll
                    ask our link partner to transmit LACPDU packets in 802.3ad mode.
                    Available options are ``fast`` or ``slow``. (Default: ``slow``).'
                  type: string
                bond_miimon:
                  description: '(Bonds) The link monitoring freqeuncy in milliseconds.
                    (Default: 100).'
                  type: integer
                bond_mode:
                  description: '(Bonds) The operating mode of the bond. (Default:
                    ``active-backup``). Supported bonding modes (bond-mode): - ``balance-rr``:
                    Transmit packets in sequential order from the first available
                    slave through the last. This mode provides load balancing and
                    fault tolerance. - ``active-backup``: Only one slave in the bond
                    is active. A different slave becomes active if, and only if, the
                    active slave fails. The bond''s MAC address is externally visible
                    on only one port (network adapter) to avoid confusing the switch.
                    - ``balance-xor``: Transmit based on the selected transmit hash
                    policy. The default policy is a simple [(source MAC address XOR''d
                    with destination MAC address XOR packet type ID) modulo slave
                    count]. - ``broadcast``: Transmits everything on all slave interfaces.
                    This mode provides fault tolerance. - ``802.3ad``: IEEE 802.3ad
                    Dynamic link aggregation. Creates aggregation groups that share
                    the same speed and duplex settings. Utilizes all slaves in the
                    active aggregator according to the 802.3ad specification. - ``balance-tlb``:
                    Adaptive transmit load balancing: channel bonding that does not
                    require any special switch support. - ``balance-alb``: Adaptive
                    load balancing: includes balance-tlb plus receive load balancing
                    (rlb) for IPV4 traffic, and does not require any special switch
                    support. The receive load balancing is achieved by ARP negotiation.'
                  type: string
                bond_updelay:
                  description: (Bonds) Specifies the time, in milliseconds, to wait
                    before enabling a slave after a link recovery has been detected.
                  type: integer
                bond_xmit_hash_policy:
                  description: '(Bonds) The transmit hash policy to use for slave
                    selection in balance-xor, 802.3ad, and tlb modes. Possible values
                    are: ``layer2``, ``layer2+3``, ``layer3+4``, ``encap2+3``, ``encap3+4``.'
                  type: string
                bridge_fd:
                  description: '(Bridge interfaces) Set bridge forward delay to time
                    seconds. (Default: 15).'
                  type: integer
                bridge_stp:
                  description: '(Bridge interfaces) Turn spanning tree protocol on
                    or off. (Default: False).'
                  type: boolean
                bridge_type:
                  description: '(Bridge interfaces) Type of bridge to create. Possible
                    values are: ``standard``, ``ovs``.'
                  type: string
                interface_speed:
                  description: '(Physical interfaces) The speed of the interface in
                    Mbit/s. (Default: 0).'
                  type: integer
                link_connected:
                  description: '(Physical interfaces) Whether or not the interface
                    is physically conntected to an uplink. (Default: True).'
                  type: boolean
                link_speed:
                  description: '(Physical interfaces) The speed of the link in Mbit/s.
                    (Default: 0).'
                  type: integer
                mac_address:
                  description: (Bridge interfaces) MAC address of the interface.
                  type: string
                mtu:
                  description: Maximum transmission unit.
                  type: string
                name:
                  description: (Bridge interfaces) Name of the interface.
                  type: string
                parent:
                  description: (Bridge interfaces) Parent interface ids for this bridge
                    interface.
                  type: integer
                parents:
                  description: (Bond interfaces) Parent interface ids that make this
                    bond.
                  type: integer
                tags:
                  description: (Bridge interfaces) Tags for the interface.
                  type: string
                vlan:
                  description: (Bridge interfaces) VLAN id the interface is connected
                    to.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new requested interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Update an interface
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-add_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Add a tag to an interface with the given system_id and interface
        id.
      operationId: InterfaceHandler_add_tag
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to add.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated interface object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: If the user does not have the permission to add a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Add a tag to an interface
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-disconnect:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Disconnect an interface with the given system_id and interface
        id.


        Deletes any linked subnets and IP addresses, and disconnects the interface
        from any associated VLAN.'
      operationId: InterfaceHandler_disconnect
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Disconnect an interface
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-link_subnet:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Link an interface with the given system_id and interface id to
        a subnet.
      operationId: InterfaceHandler_link_subnet
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                default_gateway:
                  description: True sets the gateway IP address for the subnet as
                    the default gateway for the node this interface belongs to. Option
                    can only be used with the ``AUTO`` and ``STATIC`` modes.
                  type: string
                force:
                  description: If True, allows ``LINK_UP`` to be set on the interface
                    even if other links already exist. Also allows the selection of
                    any VLAN, even a VLAN MAAS does not believe the interface to currently
                    be on. Using this option will cause all other links on the interface
                    to be deleted. (Defaults to False.)
                  type: boolean
                ip_address:
                  description: IP address for the interface in subnet. Only used when
                    mode is ``STATIC``. If not provided an IP address from subnet
                    will be auto selected.
                  type: string
                mode:
                  description: '``AUTO``, ``DHCP``, ``STATIC`` or ``LINK_UP`` connection
                    to subnet. Mode definitions: - ``AUTO``: Assign this interface
                    a static IP address from the provided subnet. The subnet must
                    be a managed subnet. The IP address will not be assigned until
                    the node goes to be deployed. - ``DHCP``: Bring this interface
                    up with DHCP on the given subnet. Only one subnet can be set to
                    ``DHCP``. If the subnet is managed this interface will pull from
                    the dynamic IP range. - ``STATIC``: Bring this interface up with
                    a static IP address on the given subnet. Any number of static
                    links can exist on an interface. - ``LINK_UP``: Bring this interface
                    up only on the given subnet. No IP address will be assigned to
                    this interface. The interface cannot have any current ``AUTO``,
                    ``DHCP`` or ``STATIC`` links.'
                  type: string
                subnet:
                  description: Subnet id linked to interface.
                  type: integer
              required:
              - mode
              - subnet
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new update interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Link interface to a subnet
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-remove_tag:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Remove a tag from an interface with the given system_id and interface
        id.
      operationId: InterfaceHandler_remove_tag
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to remove.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated interface object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: If the user does not have the permission to add a tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Remove a tag from an interface
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-set_default_gateway:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Set the given interface id on the given system_id as the default
        gateway.


        If this interface has more than one subnet with a gateway IP in the same IP
        address family then specifying the ID of the link on this interface is required.'
      operationId: InterfaceHandler_set_default_gateway
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                link_id:
                  description: ID of the link on this interface to select the default
                    gateway IP address from.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated interface object.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: If the interface has no ``AUTO`` or ``STATIC`` links.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Set the default gateway on a machine
      tags:
      - Interface
  /nodes/{system_id}/interfaces/{id}/op-unlink_subnet:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Unlink an interface with the given system_id and interface id from
        a subnet.
      operationId: InterfaceHandler_unlink_subnet
      parameters:
      - description: A system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: An interface id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                id:
                  description: ID of the subnet link on the interface to remove.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated interface object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or interface is not found.
      summary: Unlink interface from subnet
      tags:
      - Interface
  /nodes/{system_id}/op-details:
    get:
      description: 'Returns system details -- for example, LLDP and ``lshw`` XML dumps.


        Returns a ``{detail_type: xml, ...}`` map, where ``detail_type`` is something
        like "lldp" or "lshw".


        Note that this is returned as BSON and not JSON. This is for efficiency, but
        mainly because JSON can''t do binary content without applying additional encoding
        like base-64. The example output below is represented in ASCII using ``bsondump
        example.bson`` and is for demonstrative purposes.'
      operationId: NodeHandler_details
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A BSON object represented here in ASCII using ``bsondump example.bson``.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get system details
      tags:
      - Node
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/op-power_parameters:
    get:
      description: 'Gets power parameters for a given system_id, if any. For some
        types of power control this will include private information such as passwords
        and secret keys.


        Note that this method is reserved for admin users and returns a 403 if the
        user is not one.'
      operationId: NodeHandler_power_parameters
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see the power parameters.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get power parameters
      tags:
      - Node
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/raid/{id}/:
    delete:
      description: Delete a RAID with the given id on a machine with the given system_id.
      operationId: RaidHandler_delete
      parameters:
      - description: The system_id of the machine containing the RAID.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A RAID id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or RAID is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete a RAID
      tags:
      - RAID Device
    get:
      description: Read RAID with the given id on a machine with the given system_id.
      operationId: RaidHandler_read
      parameters:
      - description: The system_id of the machine containing the RAID.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A RAID id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested RAID.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or RAID is not found.
      summary: Read a RAID
      tags:
      - RAID Device
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a RAID with the given id on a machine with the given system_id.
      operationId: RaidHandler_update
      parameters:
      - description: The system_id of the machine containing the RAID.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: A RAID id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                add_block_devices:
                  description: Block devices to add to the RAID.
                  type: string
                add_partitions:
                  description: Partitions to add to the RAID.
                  type: string
                add_spare_devices:
                  description: Spare block devices to add to the RAID.
                  type: string
                add_spare_partitions:
                  description: Spare partitions to add to the RAID.
                  type: string
                name:
                  description: Name of the RAID.
                  type: string
                remove_block_devices:
                  description: Block devices to remove from the RAID.
                  type: string
                remove_partitions:
                  description: Partitions to remove from the RAID.
                  type: string
                remove_spare_devices:
                  description: Spare block devices to remove from the RAID.
                  type: string
                remove_spare_partitions:
                  description: Spare partitions to remove from the RAID.
                  type: string
                uuid:
                  description: UUID of the RAID.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated RAID.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or RAID id is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a RAID
      tags:
      - RAID Device
  /nodes/{system_id}/raids/:
    get:
      description: List all RAIDs belonging to a machine with the given system_id.
      operationId: RaidsHandler_read
      parameters:
      - description: The system_id of the machine containing the RAIDs.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of available RAIDs.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List all RAIDs
      tags:
      - RAID Devices
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Set up a RAID on a machine with the given system_id.
      operationId: RaidsHandler_create
      parameters:
      - description: The system_id of the machine on which to set up the RAID.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                block_devices:
                  description: Block devices to add to the RAID.
                  type: string
                level:
                  description: RAID level.
                  type: integer
                name:
                  description: Name of the RAID.
                  type: string
                partitions:
                  description: Partitions to add to the RAID.
                  type: string
                spare_devices:
                  description: Spare block devices to add to the RAID.
                  type: string
                spare_partitions:
                  description: Spare partitions to add to the RAID.
                  type: string
                uuid:
                  description: UUID of the RAID.
                  type: string
              required:
              - level
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new RAID.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Set up a RAID
      tags:
      - RAID Devices
  /nodes/{system_id}/results/:
    get:
      description: Return a list of script results grouped by run for the given system_id.
      operationId: NodeScriptResultsHandler_read
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of script result objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Return script results
      tags:
      - Node Script Result
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /nodes/{system_id}/results/{id}/:
    delete:
      description: 'Delete script results from the given system_id with the given
        id.


        "id" can either by the script set id, ``current-commissioning``, ``current-testing``,
        or ``current-installation``.'
      operationId: NodeScriptResultHandler_delete
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The script result id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or script result is not found.
      summary: Delete script results
      tags:
      - Node Script Result
    get:
      description: 'View a set of test results for a given system_id and script id.


        "id" can either by the script set id, ``current-commissioning``, ``current-testing``,
        or ``current-installation``.'
      operationId: NodeScriptResultHandler_read
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The script result id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested script result object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or script result is not found.
      summary: Get specific script result
      tags:
      - Node Script Result
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update a set of test results for a given system_id and script
        id.


        "id" can either be the script set id, ``current-commissioning``, ``current-testing``,
        or ``current-installation``.'
      operationId: NodeScriptResultHandler_update
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The script result id.
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                filters:
                  description: A comma seperated list to show only results that ran
                    with a script name, tag, or id.
                  type: string
                hardware_type:
                  description: Only return scripts for the given hardware type. Can
                    be ``node``, ``cpu``, ``memory``, or ``storage``. Defaults to
                    all.
                  type: string
                include_output:
                  description: Include the base64 encoded output from the script if
                    any value for include_output is given.
                  type: string
                suppressed:
                  description: Set whether or not this script result should be suppressed
                    using 'true' or 'false'.
                  type: boolean
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested script result object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or script result is not found.
      summary: Update specific script result
      tags:
      - Node Script Result
  /nodes/{system_id}/results/{id}/op-download:
    get:
      description: 'Download a compressed tar containing all results from the given
        system_id with the given id.


        "id" can either by the script set id, ``current-commissioning``, ``current-testing``,
        or ``current-installation``.'
      operationId: NodeScriptResultHandler_download
      parameters:
      - description: The machine's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The script result id.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Plain-text output containing the requested results.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine or script result is not found.
      summary: Download script results
      tags:
      - Node Script Result
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
  /nodes/{system_id}/vmfs-datastore/{id}/:
    delete:
      description: Delete a VMFS datastore with the given id from the machine with
        the given system_id.
      operationId: VmfsDatastoreHandler_delete
      parameters:
      - description: The machine system_id containing the VMFS datastore.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the VMFS datastore.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete the specified VMFS datastore.
      tags:
      - VMFS datastore
    get:
      description: Read a VMFS datastore with the given id on the machine with the
        given system_id.
      operationId: VmfsDatastoreHandler_read
      parameters:
      - description: The machine system_id on which to create the VMFS datastore.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the VMFS datastore.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested VMFS data.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Read a VMFS datastore.
      tags:
      - VMFS datastore
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a VMFS datastore with the given id on the machine with the
        given system_id.
      operationId: VmfsDatastoreHandler_update
      parameters:
      - description: The machine system_id containing the VMFS datastore.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the VMFS datastore.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                add_block_devices:
                  description: Block devices to add to the VMFS datastore.
                  type: string
                add_partitions:
                  description: Partitions to add to the VMFS datastore.
                  type: string
                name:
                  description: Name of the VMFS datastore.
                  type: string
                remove_partitions:
                  description: Partitions to remove from the VMFS datastore.
                  type: string
                uuid:
                  description: UUID of the VMFS datastore.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested VMFS datastore.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a VMFS datastore.
      tags:
      - VMFS datastore
  /nodes/{system_id}/vmfs-datastores/:
    get:
      description: List all VMFS datastores belonging to a machine with the given
        system_id.
      operationId: VmfsDatastoresHandler_read
      parameters:
      - description: The machine system_id containing the VMFS datastores.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of VMFS datastore objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List all VMFS datastores.
      tags:
      - VMFS datastores
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Create a VMFS datastore belonging to a machine with the given
        system_id.


        Note that at least one valid block device or partition is required.'
      operationId: VmfsDatastoresHandler_create
      parameters:
      - description: The machine system_id on which to create the VMFS datastore.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                block_devices:
                  description: Block devices to add to the VMFS datastore.
                  type: string
                name:
                  description: Name of the VMFS datastore.
                  type: string
                partitions:
                  description: Partitions to add to the VMFS datastore.
                  type: string
                uuid:
                  description: (optional) UUID of the VMFS group.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new VMFS datastore.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Create a VMFS datastore.
      tags:
      - VMFS datastores
  /nodes/{system_id}/volume-group/{id}/:
    delete:
      description: Delete a volume group with the given id from the machine with the
        given system_id.
      operationId: VolumeGroupHandler_delete
      parameters:
      - description: The machine system_id containing the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the volume group.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete volume group
      tags:
      - Volume group
    get:
      description: Read a volume group with the given id on the machine with the given
        system_id.
      operationId: VolumeGroupHandler_read
      parameters:
      - description: The machine system_id on which to create the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the volume group.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested volume group.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: Read a volume group
      tags:
      - Volume group
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a volume group with the given id on the machine with the
        given system_id.
      operationId: VolumeGroupHandler_update
      parameters:
      - description: The machine system_id containing the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the volume group.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                add_block_devices:
                  description: Block devices to add to the volume group.
                  type: string
                add_partitions:
                  description: Partitions to add to the volume group.
                  type: string
                name:
                  description: Name of the volume group.
                  type: string
                remove_block_devices:
                  description: Block devices to remove from the volume group.
                  type: string
                remove_partitions:
                  description: Partitions to remove from the volume group.
                  type: string
                uuid:
                  description: UUID of the volume group.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested volume group.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Update a volume group
      tags:
      - Volume group
  /nodes/{system_id}/volume-group/{id}/op-create_logical_volume:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Create a logical volume in the volume group with the given id on
        the machine with the given system_id.
      operationId: VolumeGroupHandler_create_logical_volume
      parameters:
      - description: The machine system_id containing the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the volume group.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: Name of the logical volume.
                  type: string
                size:
                  description: (optional) Size of the logical volume. Must be larger
                    than or equal to 4,194,304 bytes. E.g. ``4194304``. Will default
                    to free space in the volume group if not given.
                  type: string
                uuid:
                  description: (optional) UUID of the logical volume.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested volume group.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Create a logical volume
      tags:
      - Volume group
  /nodes/{system_id}/volume-group/{id}/op-delete_logical_volume:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Delete a logical volume in the volume group with the given id
        on the machine with the given system_id.


        Note: this operation returns HTTP status code 204 even if the logical volume
        id does not exist.'
      operationId: VolumeGroupHandler_delete_logical_volume
      parameters:
      - description: The machine system_id containing the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      - description: The id of the volume group.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                id:
                  description: The logical volume id.
                  type: integer
              required:
              - id
              type: object
        required: true
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Delete a logical volume
      tags:
      - Volume group
  /nodes/{system_id}/volume-groups/:
    get:
      description: List all volume groups belonging to a machine with the given system_id.
      operationId: VolumeGroupsHandler_read
      parameters:
      - description: The machine system_id containing the volume groups.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of volume-group objects.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
      summary: List all volume groups
      tags:
      - Volume groups
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Create a volume group belonging to a machine with the given system_id.


        Note that at least one valid block device or partition is required.'
      operationId: VolumeGroupsHandler_create
      parameters:
      - description: The machine system_id on which to create the volume group.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                block_devices:
                  description: Block devices to add to the volume group.
                  type: string
                name:
                  description: Name of the volume group.
                  type: string
                partitions:
                  description: Partitions to add to the volume group.
                  type: string
                uuid:
                  description: (optional) UUID of the volume group.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new volume group.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The requested machine is not ready.
      summary: Create a volume group
      tags:
      - Volume groups
  /notifications/:
    get:
      description: 'List notifications relevant to the invoking user.


        Notifications that have been dismissed are *not* returned.'
      operationId: NotificationsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of notification objects.
      summary: List notifications
      tags:
      - Notifications
    post:
      description: 'Create a new notification.


        This is available to admins *only*.


        Note: One of the ``user``, ``users`` or ``admins`` parameters must be set
        to True for the notification to be visible to anyone.'
      operationId: NotificationsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                admins:
                  description: True to notify all admins, defaults to false, i.e.
                    not targeted to all admins.
                  type: boolean
                category:
                  description: 'Choose from: ``error``, ``warning``, ``success``,
                    or ``info``. Defaults to ``info``.'
                  type: string
                context:
                  description: Optional JSON context. The root object *must* be an
                    object (i.e. a mapping). The values herein can be referenced by
                    ``message`` with Python's "format" (not %) codes.
                  type: string
                ident:
                  description: Unique identifier for this notification.
                  type: string
                message:
                  description: The message for this notification. May contain basic
                    HTML, such as formatting. This string will be sanitised before
                    display so that it doesn't break MAAS HTML.
                  type: string
                user:
                  description: User ID this notification is intended for. By default
                    it will not be targeted to any individual user.
                  type: string
                users:
                  description: True to notify all users, defaults to false, i.e. not
                    targeted to all users.
                  type: boolean
              required:
              - message
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a new notification object.
      summary: Create a notification
      tags:
      - Notifications
  /notifications/{id}/:
    delete:
      description: Delete a notification with a given id.
      operationId: NotificationHandler_delete
      parameters:
      - description: The notification id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested notification is not found.
      summary: Delete a notification
      tags:
      - Notification
    get:
      description: Read a notification with the given id.
      operationId: NotificationHandler_read
      parameters:
      - description: The notification id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the requested notification object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested notification is not found.
      summary: Read a notification
      tags:
      - Notification
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update a notification with a given id.


        This is available to admins *only*.


        Note: One of the ``user``, ``users`` or ``admins`` parameters must be set
        to True for the notification to be visible to anyone.'
      operationId: NotificationHandler_update
      parameters:
      - description: The notification id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                admins:
                  description: True to notify all admins, defaults to false, i.e.
                    not targeted to all admins.
                  type: boolean
                category:
                  description: 'Choose from: ``error``, ``warning``, ``success``,
                    or ``info``. Defaults to ``info``.'
                  type: string
                context:
                  description: Optional JSON context. The root object *must* be an
                    object (i.e. a mapping). The values herein can be referenced by
                    ``message`` with Python's "format" (not %) codes.
                  type: string
                dismissable:
                  description: True to allow users dimissing the notification. Defaults
                    to true.
                  type: boolean
                ident:
                  description: Unique identifier for this notification.
                  type: string
                message:
                  description: The message for this notification. May contain basic
                    HTML, such as formatting. This string will be sanitised before
                    display so that it doesn't break MAAS HTML.
                  type: string
                user:
                  description: User ID this notification is intended for. By default
                    it will not be targeted to any individual user.
                  type: string
                users:
                  description: True to notify all users, defaults to false, i.e. not
                    targeted to all users.
                  type: boolean
              required:
              - message
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated notification object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested notification is not found.
      summary: Update a notification
      tags:
      - Notification
  /notifications/{id}/op-dismiss:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: 'Dismiss a notification with the given id.


        It is safe to call multiple times for the same notification.'
      operationId: NotificationHandler_dismiss
      parameters:
      - description: The notification id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The notification is not relevant to the invoking user.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested notification is not found.
      summary: Dismiss a notification
      tags:
      - Notification
  /package-repositories/:
    get:
      description: List all available package repositories.
      operationId: PackageRepositoriesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated package
            repository.
      summary: List package repositories
      tags:
      - Package Repositories
    post:
      description: Create a new package repository.
      operationId: PackageRepositoriesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                arches:
                  description: The list of supported architectures.
                  type: string
                components:
                  description: The list of components to enable. Only applicable to
                    custom repositories.
                  type: string
                disabled_components:
                  description: The list of components to disable. Only applicable
                    to the default Ubuntu repositories.
                  type: string
                disabled_pockets:
                  description: The list of pockets to disable.
                  type: string
                distributions:
                  description: Which package distributions to include.
                  type: string
                enabled:
                  description: Whether or not the repository is enabled.
                  type: boolean
                key:
                  description: The authentication key to use with the repository.
                  type: string
                name:
                  description: The name of the package repository.
                  type: string
                url:
                  description: The url of the package repository.
                  type: string
              required:
              - name
              - url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new package
            repository.
      summary: Create a package repository
      tags:
      - Package Repositories
  /package-repositories/{id}/:
    delete:
      description: Delete a package repository with the given id.
      operationId: PackageRepositoryHandler_delete
      parameters:
      - description: A package repository id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested package repository is not found.
      summary: Delete a package repository
      tags:
      - Package Repository
    get:
      description: Read a package repository with the given id.
      operationId: PackageRepositoryHandler_read
      parameters:
      - description: A package repository id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested package
            repository.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested package repository is not found.
      summary: Read a package repository
      tags:
      - Package Repository
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update the package repository with the given id.
      operationId: PackageRepositoryHandler_update
      parameters:
      - description: A package repository id.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                arches:
                  description: The list of supported architectures.
                  type: string
                components:
                  description: The list of components to enable. Only applicable to
                    custom repositories.
                  type: string
                disable_sources:
                  description: Disable deb-src lines.
                  type: string
                disabled_components:
                  description: The list of components to disable. Only applicable
                    to the default Ubuntu repositories.
                  type: string
                disabled_pockets:
                  description: The list of pockets to disable.
                  type: string
                distributions:
                  description: Which package distributions to include.
                  type: string
                enabled:
                  description: Whether or not the repository is enabled.
                  type: boolean
                key:
                  description: The authentication key to use with the repository.
                  type: string
                name:
                  description: The name of the package repository.
                  type: string
                url:
                  description: The url of the package repository.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated package
            repository.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested package repository is not found.
      summary: Update a package repository
      tags:
      - Package Repository
  /pods/:
    get:
      description: Get a listing of all VM hosts.
      operationId: PodsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of VM host objects.
      summary: List VM hosts
      tags:
      - Pods (deprecated)
    post:
      description: Create or discover a new VM host.
      operationId: PodsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: The new VM host's name.
                  type: string
                pool:
                  description: The name of the resource pool the new VM host will
                    belong to. Machines composed from this VM host will be assigned
                    to this resource pool by default.
                  type: string
                power_address:
                  description: Address that gives MAAS access to the VM host power
                    control. For example, for virsh ``qemu+ssh://172.16.99.2/system``
                    For ``lxd``, this is just the address of the host.
                  type: string
                power_pass:
                  description: Password to use for power control of the VM host. Required
                    ``virsh`` VM hosts that do not have SSH set up for public-key
                    authentication and for ``lxd`` if the MAAS certificate is not
                    registered already in the LXD server.
                  type: string
                power_user:
                  description: Username to use for power control of the VM host. Required
                    for ``virsh`` VM hosts that do not have SSH set up for public-key
                    authentication.
                  type: string
                project:
                  description: For ``lxd`` VM hosts, the project that MAAS will manage.
                    If not provided, the ``default`` project will be used. If a nonexistent
                    name is given, a new project with that name will be created.
                  type: string
                tags:
                  description: A tag or list of tags ( comma delimited) to assign
                    to the new VM host.
                  type: string
                type:
                  description: 'The type of VM host to create: ``lxd`` or ``virsh``.'
                  type: string
                zone:
                  description: The new VM host's zone.
                  type: string
              required:
              - type
              - power_address
              - power_user
              - power_pass
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a VM host object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: MAAS could not find or could not authenticate with the VM host.
      summary: Create a VM host
      tags:
      - Pods (deprecated)
  /pods/{id}/:
    delete:
      description: Deletes a VM host with the given ID.
      operationId: PodHandler_delete
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Deletes a VM host
      tags:
      - Pod (deprecated)
    get:
      description: 'Manage an individual Pod.


        The ''Pod'' endpoint has been deprecated in favour of ''Virtual-machine-host''.'
      operationId: PodHandler_read
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '''str'' object has no attribute ''has_model'''
      summary: PodHandler read
      tags:
      - Pod (deprecated)
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update a specific VM host by ID.


        Note: A VM host''s ''type'' cannot be updated. The VM host must be deleted
        and re-added to change the type.'
      operationId: PodHandler_update
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                cpu_over_commit_ratio:
                  description: CPU overcommit ratio (0-10)
                  type: integer
                default_macvlan_mode:
                  description: 'Default macvlan mode for VM hosts that use it: bridge,
                    passthru, private, vepa.'
                  type: string
                default_storage_pool:
                  description: Default KVM storage pool to use when the VM host has
                    storage pools.
                  type: string
                memory_over_commit_ratio:
                  description: CPU overcommit ratio (0-10)
                  type: integer
                name:
                  description: The VM host's name.
                  type: string
                pool:
                  description: The name of the resource pool associated with this
                    VM host -- composed machines will be assigned to this resource
                    pool by default.
                  type: string
                power_address:
                  description: Address for power control of the VM host.
                  type: string
                power_pass:
                  description: Password for access to power control of the VM host.
                  type: string
                tags:
                  description: Tag or tags (command separated) associated with the
                    VM host.
                  type: string
                zone:
                  description: The VM host's zone.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON VM host object.
        '403':
          description: 403 -- The current user does not have permission to update
            the VM host.
        '404':
          description: 404 -- The VM host's ID was not found.
      summary: Update a specific VM host
      tags:
      - Pod (deprecated)
  /pods/{id}/op-add_tag:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Adds a tag to a given VM host.
      operationId: PodHandler_add_tag
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to add.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Add a tag to a VM host
      tags:
      - Pod (deprecated)
  /pods/{id}/op-compose:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Compose a new machine from a VM host.
      operationId: PodHandler_compose
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                architecture:
                  description: The architecture of the new machine (e.g. amd64). This
                    must be an architecture the VM host supports.
                  type: string
                cores:
                  description: The minimum number of CPU cores.
                  type: integer
                cpu_speed:
                  description: The minimum CPU speed, specified in MHz.
                  type: integer
                domain:
                  description: The ID of the domain in which to put the newly composed
                    machine.
                  type: integer
                hostname:
                  description: The hostname of the newly composed machine.
                  type: string
                hugepages_backed:
                  description: Whether to request hugepages backing for the machine.
                  type: boolean
                interfaces:
                  description: 'A labeled constraint map associating constraint labels
                    with desired interface properties. MAAS will assign interfaces
                    that match the given interface properties. Format: ``label:key=value,key=value,...``
                    Keys: - ``id``: Matches an interface with the specific id - ``fabric``:
                    Matches an interface attached to the specified fabric. - ``fabric_class``:
                    Matches an interface attached to a fabric with the specified class.
                    - ``ip``: Matches an interface whose VLAN is on the subnet implied
                    by the given IP address, and allocates the specified IP address
                    for the machine on that interface (if it is available). - ``mode``:
                    Matches an interface with the specified mode. (Currently, the
                    only supported mode is "unconfigured".) - ``name``: Matches an
                    interface with the specified name. (For example, "eth0".) - ``hostname``:
                    Matches an interface attached to the node with the specified hostname.
                    - ``subnet``: Matches an interface attached to the specified subnet.
                    - ``space``: Matches an interface attached to the specified space.
                    - ``subnet_cidr``: Matches an interface attached to the specified
                    subnet CIDR. (For example, "192.168.0.0/24".) - ``type``: Matches
                    an interface of the specified type. (Valid types: "physical",
                    "vlan", "bond", "bridge", or "unknown".) - ``vlan``: Matches an
                    interface on the specified VLAN. - ``vid``: Matches an interface
                    on a VLAN with the specified VID. - ``tag``: Matches an interface
                    tagged with the specified tag.'
                  type: string
                memory:
                  description: The minimum amount of memory, specified in MiB (e.g.
                    2 MiB == 2*1024*1024).
                  type: integer
                pinned_cores:
                  description: List of host CPU cores to pin the VM to. If this is
                    passed, the "cores" parameter is ignored.
                  type: integer
                pool:
                  description: The ID of the pool in which to put the newly composed
                    machine.
                  type: integer
                storage:
                  description: A list of storage constraint identifiers in the form
                    ``label:size(tag,tag,...), label:size(tag,tag,...)``. For more
                    information please see the CLI VM host management page of the
                    official MAAS documentation.
                  type: string
                zone:
                  description: The ID of the zone in which to put the newly composed
                    machine.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new machine ID and resource URI.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Compose a virtual machine on the host.
      tags:
      - Pod (deprecated)
  /pods/{id}/op-parameters:
    get:
      description: 'This returns a VM host''s configuration parameters. For some types
        of VM host, this will include private information such as passwords and secret
        keys.


        Note: This method is reserved for admin users.'
      operationId: PodHandler_parameters
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the VM host's configuration parameters.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Obtain VM host parameters
      tags:
      - Pod (deprecated)
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /pods/{id}/op-refresh:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Performs VM host discovery and updates all discovered information
        and discovered machines.
      operationId: PodHandler_refresh
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Refresh a VM host
      tags:
      - Pod (deprecated)
  /pods/{id}/op-remove_tag:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Removes a given tag from a VM host.
      operationId: PodHandler_remove_tag
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to add.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Remove a tag from a VM host
      tags:
      - Pod (deprecated)
  /rackcontrollers/:
    get:
      description: 'List nodes visible to current user, optionally filtered by criteria.


        Nodes are sorted by id (i.e. most recent last) and grouped by type.'
      operationId: RackControllersHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of node objects.
      summary: List Nodes visible to the user
      tags:
      - RackControllers
  /rackcontrollers/op-describe_power_types:
    get:
      description: Queries all rack controllers for power information.
      operationId: RackControllersHandler_describe_power_types
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a dictionary with system_ids as keys
            and power parameters as values.
      summary: Get power information from rack controllers
      tags:
      - RackControllers
  /rackcontrollers/op-import_boot_images:
    post:
      description: Imports boot images on all rack controllers.
      operationId: RackControllersHandler_import_boot_images
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Import of boot images started on all rack controllers
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: Import boot images on all rack controllers
      tags:
      - RackControllers
  /rackcontrollers/op-is_registered:
    get:
      description: Returns whether or not the given MAC address is registered within
        this MAAS (and attached to a non-retired node).
      operationId: RackControllersHandler_is_registered
      responses:
        '200':
          description: '''true'' or ''false'''
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: mac_address was missing
      summary: MAC address registered
      tags:
      - RackControllers
  /rackcontrollers/op-power_parameters:
    get:
      description: 'Get power parameters for multiple machines. To request power parameters
        for a specific machine or more than one machine: ``op=power_parameters&id=abc123&id=def456``.'
      operationId: RackControllersHandler_power_parameters
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of power parameters with system_ids
            as keys.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to view the power parameters.
      summary: Get power parameters
      tags:
      - RackControllers
  /rackcontrollers/op-set_zone:
    post:
      description: Assigns a given node to a given zone.
      operationId: RackControllersHandler_set_zone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                nodes:
                  description: The node to add.
                  type: string
                zone:
                  description: The zone name.
                  type: string
              required:
              - zone
              - nodes
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The given parameters were not correct.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
      summary: Assign nodes to a zone
      tags:
      - RackControllers
  /rackcontrollers/{system_id}/:
    delete:
      description: 'Deletes a rack controller with the given system_id. A rack controller
        cannot be deleted if it is set to `primary_rack` on a `VLAN` and another rack
        controller cannot be used to provide DHCP for said VLAN. Use `force` to override
        this behavior.


        Using `force` will also allow deleting a rack controller that is hosting pod
        virtual machines. The pod will also be deleted.


        Rack controllers that are also region controllers will be converted to a region
        controller (and hosted pods will not be affected).'
      operationId: RackControllerHandler_delete
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: Unable to delete 'maas-run'; it is currently set as a primary
            rack controller on VLANs fabric-0.untagged and no other rack controller
            can provide DHCP.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permssions to delete the rack controller.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: Delete a rack controller
      tags:
      - RackController
    get:
      description: Reads a node with the given system_id.
      operationId: RackControllerHandler_read
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Read a node
      tags:
      - RackController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    put:
      description: Updates a rack controller with the given system_id.
      operationId: RackControllerHandler_update
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: The new description for this given rack controller.
                  type: string
                domain:
                  description: The domain for this controller. If not given the default
                    domain is used.
                  type: string
                power_parameters_skip_check:
                  description: If true, the new power parameters for the given rack
                    controller will be checked against the expected parameters for
                    the rack controller's power type. Default is false.
                  type: boolean
                power_parameters_{param:
                  description: The new value for the 'param' power parameter. This
                    is a dynamic parameter that depends on the rack controller's power_type.
                    See the `Power types`_ section for a list of available parameters
                    based on power type. Note that only admin users can set these
                    parameters.
                  type: string
                power_type:
                  description: The new power type for the given rack controller. If
                    you use the default value, power_parameters will be set to an
                    empty string. See the `Power types`_ section for a list of available
                    power types. Note that only admin users can set this parameter.
                  type: string
                zone:
                  description: The name of a valid zone in which to place the given
                    rack controller.
                  type: string
              required:
              - power_parameters_{param
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated rack-controller object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: This method is reserved for admin users.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: Update a rack controller
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-abort:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Abort a node's current operation.
      operationId: RackControllerHandler_abort
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to abort the current operation.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Abort a node operation
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-details:
    get:
      description: 'Returns system details -- for example, LLDP and ``lshw`` XML dumps.


        Returns a ``{detail_type: xml, ...}`` map, where ``detail_type`` is something
        like "lldp" or "lshw".


        Note that this is returned as BSON and not JSON. This is for efficiency, but
        mainly because JSON can''t do binary content without applying additional encoding
        like base-64. The example output below is represented in ASCII using ``bsondump
        example.bson`` and is for demonstrative purposes.'
      operationId: RackControllerHandler_details
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A BSON object represented here in ASCII using ``bsondump example.bson``.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get system details
      tags:
      - RackController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /rackcontrollers/{system_id}/op-import_boot_images:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Import boot images on a given rack controller or all rack controllers.
      operationId: RackControllerHandler_import_boot_images
      parameters:
      - description: A rack controller system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Import of boot images started on <rack controller name>
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: Import boot images
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-list_boot_images:
    get:
      description: Lists all available boot images for a given rack controller system_id
        and whether they are in sync with the region controller.
      operationId: RackControllerHandler_list_boot_images
      parameters:
      - description: The rack controller system_id for which you want to list boot
          images.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: List available boot images
      tags:
      - RackController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /rackcontrollers/{system_id}/op-override_failed_testing:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Ignore failed tests and put node back into a usable state.
      operationId: RackControllerHandler_override_failed_testing
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to override tests.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Ignore failed tests
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-power_off:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Powers off a given node.
      operationId: RackControllerHandler_power_off
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
                stop_mode:
                  description: Power-off mode. If 'soft', perform a soft power down
                    if the node's power type supports it, otherwise perform a hard
                    power off. For all values other than 'soft', and by default, perform
                    a hard power off. A soft power off generally asks the OS to shutdown
                    the system gracefully before powering off, while a hard power
                    off occurs immediately without any warning to the OS.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to power off the node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Power off a node
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-power_on:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: Turn on the given node with optional user-data and comment.
      operationId: RackControllerHandler_power_on
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: Comment for the event log.
                  type: string
                user_data:
                  description: Base64-encoded blob of data to be made available to
                    the nodes through the metadata service.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user is not authorized to power on the node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: Returns 503 if the start-up attempted to allocate an IP address,
            and there were no IP addresses available on the relevant cluster interface.
      summary: Turn on a node
      tags:
      - RackController
  /rackcontrollers/{system_id}/op-power_parameters:
    get:
      description: 'Gets power parameters for a given system_id, if any. For some
        types of power control this will include private information such as passwords
        and secret keys.


        Note that this method is reserved for admin users and returns a 403 if the
        user is not one.'
      operationId: RackControllerHandler_power_parameters
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see the power parameters.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get power parameters
      tags:
      - RackController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /rackcontrollers/{system_id}/op-query_power_state:
    get:
      description: 'Gets the power state of a given node. MAAS sends a request to
        the node''s power controller, which asks it about the node''s state.

        The reply to this could be delayed by up to 30 seconds while waiting for the
        power controller to respond.  Use this method sparingly as it ties up an appserver
        thread while waiting.'
      operationId: RackControllerHandler_query_power_state
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's power state.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get the power state of a node
      tags:
      - RackController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /rackcontrollers/{system_id}/op-test:
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    post:
      description: 'Begins the testing process for a given node.


        A node in the ''ready'', ''allocated'', ''deployed'', ''broken'', or any failed
        state may run tests. If testing is started and successfully passes from ''broken''
        or any failed state besides ''failed commissioning'' the node will be returned
        to a ready state. Otherwise the node will return to the state it was when
        testing started.'
      operationId: RackControllerHandler_test
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                enable_ssh:
                  description: Whether to enable SSH for the testing environment using
                    the user's SSH key(s). 0 == false. 1 == true.
                  type: integer
                parameters:
                  description: Scripts selected to run may define their own parameters.
                    These parameters may be passed using the parameter name. Optionally
                    a parameter may have the script name prepended to have that parameter
                    only apply to that specific script.
                  type: string
                testing_scripts:
                  description: A comma-separated list of testing script names and
                    tags to be run. By default all tests tagged 'commissioning' will
                    be run.
                  type: string
              type: object
        required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the node's information.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Begin testing process for a node
      tags:
      - RackController
  /regioncontrollers/:
    get:
      description: 'List nodes visible to current user, optionally filtered by criteria.


        Nodes are sorted by id (i.e. most recent last) and grouped by type.'
      operationId: RegionControllersHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of node objects.
      summary: List Nodes visible to the user
      tags:
      - RegionControllers
  /regioncontrollers/op-is_registered:
    get:
      description: Returns whether or not the given MAC address is registered within
        this MAAS (and attached to a non-retired node).
      operationId: RegionControllersHandler_is_registered
      responses:
        '200':
          description: '''true'' or ''false'''
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: mac_address was missing
      summary: MAC address registered
      tags:
      - RegionControllers
  /regioncontrollers/op-set_zone:
    post:
      description: Assigns a given node to a given zone.
      operationId: RegionControllersHandler_set_zone
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                nodes:
                  description: The node to add.
                  type: string
                zone:
                  description: The zone name.
                  type: string
              required:
              - zone
              - nodes
              type: object
        required: true
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The given parameters were not correct.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have set the zone.
      summary: Assign nodes to a zone
      tags:
      - RegionControllers
  /regioncontrollers/{system_id}/:
    delete:
      description: 'Deletes a region controller with the given system_id.


        A region controller cannot be deleted if it hosts pod virtual machines.

        Use `force` to override this behavior. Forcing deletion will also remove hosted
        pods.'
      operationId: RegionControllerHandler_delete
      parameters:
      - description: The region controller's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: '204'
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: If MAAS is unable to delete the region controller.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to delete the rack controller.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested rack controller system_id is not found.
      summary: Delete a region controller
      tags:
      - RegionController
    get:
      description: Reads a node with the given system_id.
      operationId: RegionControllerHandler_read
      parameters:
      - description: A node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested node.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Read a node
      tags:
      - RegionController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
    put:
      description: Updates a region controller with the given system_id.
      operationId: RegionControllerHandler_update
      parameters:
      - description: The region controller's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: The new description for this given region controller.
                  type: string
                power_parameters_skip_check:
                  description: Whether or not the new power parameters for this region
                    controller should be checked against the expected power parameters
                    for the region controller's power type ('true' or 'false'). The
                    default is 'false'.
                  type: boolean
                power_parameters_{param1:
                  description: The new value for the 'param1' power parameter. Note
                    that this is dynamic as the available parameters depend on the
                    selected value of the region controller's power_type. Available
                    to admin users. See the `Power types`_ section for a list of the
                    available power parameters for each power type.
                  type: string
                power_type:
                  description: The new power type for this region controller. If you
                    use the default value, power_parameters will be set to the empty
                    string. Available to admin users. See the `Power types`_ section
                    for a list of the available power types.
                  type: string
                zone:
                  description: Name of a valid physical zone in which to place this
                    region controller.
                  type: string
              required:
              - power_parameters_{param1
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the updated region controller object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to update the region controller.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested region controller system_id is not found.
      summary: Update a region controller
      tags:
      - RegionController
  /regioncontrollers/{system_id}/op-details:
    get:
      description: 'Returns system details -- for example, LLDP and ``lshw`` XML dumps.


        Returns a ``{detail_type: xml, ...}`` map, where ``detail_type`` is something
        like "lldp" or "lshw".


        Note that this is returned as BSON and not JSON. This is for efficiency, but
        mainly because JSON can''t do binary content without applying additional encoding
        like base-64. The example output below is represented in ASCII using ``bsondump
        example.bson`` and is for demonstrative purposes.'
      operationId: RegionControllerHandler_details
      parameters:
      - description: The node's system_id.
        in: path
        name: system_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A BSON object represented here in ASCII using ``bsondump example.bson``.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get system details
      tags:
      - RegionController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /regioncontrollers/{system_id}/op-power_parameters:
    get:
      description: 'Gets power parameters for a given system_id, if any. For some
        types of power control this will include private information such as passwords
        and secret keys.


        Note that this method is reserved for admin users and returns a 403 if the
        user is not one.'
      operationId: RegionControllerHandler_power_parameters
      responses:
        '200':
          description: '200'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have permission to see the power parameters.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested node is not found.
      summary: Get power parameters
      tags:
      - RegionController
    parameters:
    - in: path
      name: system_id
      required: true
      schema:
        type: string
  /resourcepool/{id}/:
    delete:
      description: Deletes a resource pool.
      operationId: ResourcePoolHandler_delete
      parameters:
      - description: The resource pool name/id to delete.
        in: path
        name: id
        required: true
        schema:
          type: object
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: An empty string
        '204':
          content:
            text/plain:
              schema:
                type: string
          description: An empty string
      summary: ResourcePoolHandler delete
      tags:
      - Resource pool
    get:
      description: Returns a resource pool.
      operationId: ResourcePoolHandler_read
      parameters:
      - description: A resource pool id/name.
        in: path
        name: id
        required: true
        schema:
          type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing resource pool information
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The resource pool name is not found.
      summary: ResourcePoolHandler read
      tags:
      - Resource pool
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Updates a resource pool''s name or description.


        Note that any other given parameters are silently ignored.'
      operationId: ResourcePoolHandler_update
      parameters:
      - description: The resource pool id/name to update.
        in: path
        name: id
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A brief description of the resource pool.
                  type: string
                name:
                  description: The resource pool's new name.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing details about your new resource pool.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: Zone not found
      summary: ResourcePoolHandler update
      tags:
      - Resource pool
  /resourcepools/:
    get:
      description: 'Get a listing of all resource pools.


        Note that there is always at least one resource pool: default.'
      operationId: ResourcePoolsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of resource pools.
      summary: ResourcePoolsHandler read
      tags:
      - Resource pools
    post:
      description: Creates a new resource pool.
      operationId: ResourcePoolsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A brief description of the new resource pool.
                  type: string
                name:
                  description: The new resource pool's name.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing details about your new resource pool.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The resource pool already exists
      summary: ResourcePoolsHandler create
      tags:
      - Resource pools
  /scripts/:
    get:
      description: 'Return a list of stored scripts.


        Note that parameters should be passed in the URI. E.g.

        ``/script/?type=testing``.'
      operationId: NodeScriptsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of script objects.
      summary: List stored scripts
      tags:
      - Node Scripts
    post:
      description: Create a new script.
      operationId: NodeScriptsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: A comment about what this change does.
                  type: string
                description:
                  description: A description of what the script does.
                  type: string
                destructive:
                  description: Whether or not the script overwrites data on any drive
                    on the running system. Destructive scripts can not be run on deployed
                    systems. Defaults to false.
                  type: boolean
                for_hardware:
                  description: A list of modalias, PCI IDs, and/or USB IDs the script
                    will automatically run on. Must start with ``modalias:``, ``pci:``,
                    or ``usb:``.
                  type: string
                hardware_type:
                  description: The hardware_type defines what type of hardware the
                    script is assoicated with. May be CPU, memory, storage, network,
                    or node.
                  type: string
                may_reboot:
                  description: Whether or not the script may reboot the system while
                    running.
                  type: boolean
                name:
                  description: The name of the script.
                  type: string
                parallel:
                  description: Whether the script may be run in parallel with other
                    scripts. May be disabled to run by itself, instance to run along
                    scripts with the same name, or any to run along any script. 1
                    == True, 0 == False.
                  type: integer
                recommission:
                  description: Whether builtin commissioning scripts should be rerun
                    after successfully running this scripts.
                  type: string
                script:
                  description: 'The content of the script to be uploaded in binary
                    form. Note: this is not a normal parameter, but a file upload.
                    Its filename is ignored; MAAS will know it by the name you pass
                    to the request. Optionally you can ignore the name and script
                    parameter in favor of uploading a single file as part of the request.'
                  type: string
                tags:
                  description: A comma seperated list of tags for this script.
                  type: string
                timeout:
                  description: How long the script is allowed to run before failing.
                    0 gives unlimited time, defaults to 0.
                  type: integer
                title:
                  description: The title of the script.
                  type: string
                type:
                  description: 'The script_type defines when the script should be
                    used: ``testing`` or ``commissioning``. Defaults to ``testing``.'
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new script.
      summary: Create a new script
      tags:
      - Node Scripts
  /scripts/{name}:
    delete:
      description: Deletes a script with the given name.
      operationId: NodeScriptHandler_delete
      parameters:
      - description: The script's name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Delete a script
      tags:
      - Node Script
    get:
      description: Return metadata belonging to the script with the given name.
      operationId: NodeScriptHandler_read
      parameters:
      - description: The script's name.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Return script metadata
      tags:
      - Node Script
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    put:
      description: Update a script with the given name.
      operationId: NodeScriptHandler_update
      parameters:
      - description: The name of the script.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                apply_configured_networking:
                  description: Whether to apply the provided network configuration
                    before the script runs.
                  type: boolean
                comment:
                  description: A comment about what this change does.
                  type: string
                description:
                  description: A description of what the script does.
                  type: string
                destructive:
                  description: Whether or not the script overwrites data on any drive
                    on the running system. Destructive scripts can not be run on deployed
                    systems. Defaults to false.
                  type: boolean
                for_hardware:
                  description: A list of modalias, PCI IDs, and/or USB IDs the script
                    will automatically run on. Must start with ``modalias:``, ``pci:``,
                    or ``usb:``.
                  type: string
                hardware_type:
                  description: The hardware_type defines what type of hardware the
                    script is assoicated with. May be ``cpu``, ``memory``, ``storage``,
                    ``network``, or ``node``.
                  type: string
                may_reboot:
                  description: Whether or not the script may reboot the system while
                    running.
                  type: boolean
                parallel:
                  description: Whether the script may be run in parallel with other
                    scripts. May be disabled to run by itself, instance to run along
                    scripts with the same name, or any to run along any script. ``1``
                    == True, ``0`` == False.
                  type: integer
                recommission:
                  description: Whether built-in commissioning scripts should be rerun
                    after successfully running this scripts.
                  type: boolean
                script:
                  description: 'The content of the script to be uploaded in binary
                    form. Note: this is not a normal parameter, but a file upload.
                    Its filename is ignored; MAAS will know it by the name you pass
                    to the request. Optionally you can ignore the name and script
                    parameter in favor of uploading a single file as part of the request.'
                  type: string
                tags:
                  description: A comma seperated list of tags for this script.
                  type: string
                timeout:
                  description: How long the script is allowed to run before failing.
                    0 gives unlimited time, defaults to 0.
                  type: integer
                title:
                  description: The title of the script.
                  type: string
                type:
                  description: The type defines when the script should be used. Can
                    be ``testing`` or ``commissioning``, defaults to ``testing``.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Update a script
      tags:
      - Node Script
  /scripts/{name}op-add_tag:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: Add a single tag to a script with the given name.
      operationId: NodeScriptHandler_add_tag
      parameters:
      - description: The name of the script.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being added.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Add a tag
      tags:
      - Node Script
  /scripts/{name}op-download:
    get:
      description: Download a script with the given name.
      operationId: NodeScriptHandler_download
      parameters:
      - description: The name of the script.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: A plain-text representation of the requested script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Download a script
      tags:
      - Node Script
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /scripts/{name}op-remove_tag:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: Remove a tag from a script with the given name.
      operationId: NodeScriptHandler_remove_tag
      parameters:
      - description: The name of the script.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag being removed.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Remove a tag
      tags:
      - Node Script
  /scripts/{name}op-revert:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: Revert a script with the given name to an earlier version.
      operationId: NodeScriptHandler_revert
      parameters:
      - description: The name of the script.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                to:
                  description: What revision in the script's history to revert to.
                    This can either be an ID or a negative number representing how
                    far back to go.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the reverted script.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested script is not found.
      summary: Revert a script version
      tags:
      - Node Script
  /spaces/:
    get:
      description: Generates a list of all spaces.
      operationId: SpacesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of space objects.
      summary: List all spaces
      tags:
      - Spaces
    post:
      description: Create a new space.
      operationId: SpacesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A description of the new space.
                  type: string
                name:
                  description: The name of the new space.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new space.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: Space with this name already exists.
      summary: Create a space
      tags:
      - Spaces
  /spaces/{id}/:
    delete:
      description: Deletes a space with the given ID.
      operationId: SpaceHandler_delete
      parameters:
      - description: The space's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested space is not found.
      summary: Delete a space
      tags:
      - Space
    get:
      description: Gets a space with the given ID.
      operationId: SpaceHandler_read
      parameters:
      - description: The space's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested space.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested space is not found.
      summary: Reads a space
      tags:
      - Space
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Updates a space with the given ID.
      operationId: SpaceHandler_update
      parameters:
      - description: The space's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A description of the new space.
                  type: string
                name:
                  description: The name of the new space.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated space.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested space is not found.
      summary: Update space
      tags:
      - Space
  /static-routes/:
    get:
      description: Lists all static routes.
      operationId: StaticRoutesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of static route objects.
      summary: List static routes
      tags:
      - Static routes
    post:
      description: Creates a static route.
      operationId: StaticRoutesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                destination:
                  description: Destination subnet name for the route.
                  type: string
                gateway_ip:
                  description: IP address of the gateway on the source subnet.
                  type: string
                metric:
                  description: Weight of the route on a deployed machine.
                  type: integer
                source:
                  description: Source subnet name for the route.
                  type: string
              required:
              - source
              - destination
              - gateway_ip
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new static route
            object.
      summary: Create a static route
      tags:
      - Static routes
  /static-routes/{id}/:
    delete:
      description: Deletes the static route with the given ID.
      operationId: StaticRouteHandler_delete
      parameters:
      - description: A static-route ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested static-route is not found.
      summary: Delete static route
      tags:
      - Static route
    get:
      description: Gets a static route with the given ID.
      operationId: StaticRouteHandler_read
      parameters:
      - description: A static-route ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested static
            route.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested static-route is not found.
      summary: Get a static route
      tags:
      - Static route
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Updates a static route with the given ID.
      operationId: StaticRouteHandler_update
      parameters:
      - description: A static-route ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                destination:
                  description: Destination subnet name for the route.
                  type: string
                gateway_ip:
                  description: IP address of the gateway on the source subnet.
                  type: string
                metric:
                  description: Weight of the route on a deployed machine.
                  type: integer
                source:
                  description: Source subnet name for the route.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated static
            route object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested static-route is not found.
      summary: Update a static route
      tags:
      - Static route
  /subnets/:
    get:
      description: Get a list of all subnets.
      operationId: SubnetsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing list of all known subnets.
      summary: List all subnets
      tags:
      - Subnets
    post:
      description: Creates a new subnet.
      operationId: SubnetsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                allow_dns:
                  description: Configure MAAS DNS to allow DNS resolution from this
                    subnet. '0' == False,'1' == True.
                  type: integer
                allow_proxy:
                  description: Configure maas-proxy to allow requests from this subnet.
                    '0' == False, '1' == True.
                  type: integer
                cidr:
                  description: The network CIDR for this subnet.
                  type: string
                description:
                  description: The subnet's description.
                  type: string
                disabled_boot_architectures:
                  description: A comma or space seperated list of boot architectures
                    which will not be responded to by isc-dhcpd. Values may be the
                    MAAS name for the boot architecture, the IANA hex value, or the
                    isc-dhcpd octet. Only managed subnets allow DHCP to be enabled
                    on their related dynamic ranges. (Thus, dynamic ranges become
                    "informational only"; an indication that another DHCP server is
                    currently handling them, or that MAAS will handle them when the
                    subnet is enabled for management.) Managed subnets do not allow
                    IP allocation by default. The meaning of a "reserved" IP range
                    is reversed for an unmanaged subnet. (That is, for managed subnets,
                    "reserved" means "MAAS cannot allocate any IP address within this
                    reserved block". For unmanaged subnets, "reserved" means "MAAS
                    must allocate IP addresses only from reserved IP ranges."
                  type: string
                dns_servers:
                  description: Comma-seperated list of DNS servers for this subnet.
                  type: string
                fabric:
                  description: Fabric for the subnet. Defaults to the fabric the provided
                    VLAN belongs to, or defaults to the default fabric.
                  type: string
                gateway_ip:
                  description: The gateway IP address for this subnet.
                  type: string
                managed:
                  description: In MAAS 2.0+, all subnets are assumed to be managed
                    by default.
                  type: integer
                name:
                  description: The subnet's name.
                  type: string
                rdns_mode:
                  description: 'How reverse DNS is handled for this subnet. One of:
                    - ``0`` Disabled: No reverse zone is created. - ``1`` Enabled:
                    Generate reverse zone. - ``2`` RFC2317: Extends ''1'' to create
                    the necessary parent zone with the appropriate CNAME resource
                    records for the network, if the the network is small enough to
                    require the support described in RFC2317.'
                  type: integer
                space:
                  description: Space this subnet is in. Defaults to the default space.
                  type: string
                vid:
                  description: VID of the VLAN this subnet belongs to. Only used when
                    vlan is not provided. Picks the VLAN with this VID in the provided
                    fabric or the default fabric if one is not given.
                  type: integer
                vlan:
                  description: VLAN this subnet belongs to. Defaults to the default
                    VLAN for the provided fabric or defaults to the default VLAN in
                    the default fabric (if unspecified).
                  type: string
              required:
              - cidr
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new subnet.
      summary: Create a subnet
      tags:
      - Subnets
  /subnets/{id}/:
    delete:
      description: Delete a subnet with the given ID.
      operationId: SubnetHandler_delete
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: Delete a subnet
      tags:
      - Subnet
    get:
      description: Get information about a subnet with the given ID.
      operationId: SubnetHandler_read
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the subnet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: Get a subnet
      tags:
      - Subnet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a subnet with the given ID.
      operationId: SubnetHandler_update
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                allow_dns:
                  description: Configure MAAS DNS to allow DNS resolution from this
                    subnet. '0' == False,'1' == True.
                  type: integer
                allow_proxy:
                  description: Configure maas-proxy to allow requests from this subnet.
                    '0' == False, '1' == True.
                  type: integer
                cidr:
                  description: The network CIDR for this subnet.
                  type: string
                description:
                  description: The subnet's description.
                  type: string
                disabled_boot_architectures:
                  description: A comma or space seperated list of boot architectures
                    which will not be responded to by isc-dhcpd. Values may be the
                    MAAS name for the boot architecture, the IANA hex value, or the
                    isc-dhcpd octet. Only managed subnets allow DHCP to be enabled
                    on their related dynamic ranges. (Thus, dynamic ranges become
                    "informational only"; an indication that another DHCP server is
                    currently handling them, or that MAAS will handle them when the
                    subnet is enabled for management.) Managed subnets do not allow
                    IP allocation by default. The meaning of a "reserved" IP range
                    is reversed for an unmanaged subnet. (That is, for managed subnets,
                    "reserved" means "MAAS cannot allocate any IP address within this
                    reserved block". For unmanaged subnets, "reserved" means "MAAS
                    must allocate IP addresses only from reserved IP ranges."
                  type: string
                dns_servers:
                  description: Comma-seperated list of DNS servers for this subnet.
                  type: string
                fabric:
                  description: Fabric for the subnet. Defaults to the fabric the provided
                    VLAN belongs to, or defaults to the default fabric.
                  type: string
                gateway_ip:
                  description: The gateway IP address for this subnet.
                  type: string
                managed:
                  description: In MAAS 2.0+, all subnets are assumed to be managed
                    by default.
                  type: integer
                name:
                  description: The subnet's name.
                  type: string
                rdns_mode:
                  description: 'How reverse DNS is handled for this subnet. One of:
                    - ``0`` Disabled: No reverse zone is created. - ``1`` Enabled:
                    Generate reverse zone. - ``2`` RFC2317: Extends ''1'' to create
                    the necessary parent zone with the appropriate CNAME resource
                    records for the network, if the the network is small enough to
                    require the support described in RFC2317.'
                  type: integer
                space:
                  description: Space this subnet is in. Defaults to the default space.
                  type: string
                vid:
                  description: VID of the VLAN this subnet belongs to. Only used when
                    vlan is not provided. Picks the VLAN with this VID in the provided
                    fabric or the default fabric if one is not given.
                  type: integer
                vlan:
                  description: VLAN this subnet belongs to. Defaults to the default
                    VLAN for the provided fabric or defaults to the default VLAN in
                    the default fabric (if unspecified).
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the updated subnet.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: Update a subnet
      tags:
      - Subnet
  /subnets/{id}/op-ip_addresses:
    get:
      description: Returns a summary of IP addresses assigned to this subnet.
      operationId: SubnetHandler_ip_addresses
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of IP addresses and information
            about each.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: Summary of IP addresses
      tags:
      - Subnet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /subnets/{id}/op-reserved_ip_ranges:
    get:
      description: Lists IP ranges currently reserved in the subnet.
      operationId: SubnetHandler_reserved_ip_ranges
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of reserved IP ranges.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: List reserved IP ranges
      tags:
      - Subnet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /subnets/{id}/op-statistics:
    get:
      description: 'Returns statistics for the specified subnet, including: - **num_available**:
        the number of available IP addresses - **largest_available**: the largest
        number of contiguous free IP   addresses - **num_unavailable**: the number
        of unavailable IP addresses - **total_addresses**: the sum of the available
        plus unavailable   addresses - **usage**: the (floating point) usage percentage
        of this subnet - **usage_string**: the (formatted unicode) usage percentage
        of this   subnet - **ranges**: the specific IP ranges present in ths subnet
        (if   specified) Note: to supply additional optional parameters for this request,
        add them to the request URI: e.g.

        ``/subnets/1/?op=statistics&include_suggestions=1``'
      operationId: SubnetHandler_statistics
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the statistics.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: Get subnet statistics
      tags:
      - Subnet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /subnets/{id}/op-unreserved_ip_ranges:
    get:
      description: Lists IP ranges currently unreserved in the subnet.
      operationId: SubnetHandler_unreserved_ip_ranges
      parameters:
      - description: A subnet ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of unreserved IP ranges.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested subnet is not found.
      summary: List unreserved IP ranges
      tags:
      - Subnet
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /tags/:
    get:
      description: Outputs a JSON object containing an array of all currently defined
        tag objects.
      operationId: TagsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing an array of all currently defined
            tag objects.
      summary: List tags
      tags:
      - Tags
    post:
      description: Create a new tag.
      operationId: TagsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: A description of what the the tag will be used for
                    in natural language.
                  type: string
                definition:
                  description: An XPATH query that is evaluated against the hardware_details
                    stored for all nodes (i.e. the output of ``lshw -xml``).
                  type: string
                kernel_opts:
                  description: Nodes associated with this tag will add this string
                    to their kernel options when booting. The value overrides the
                    global ``kernel_opts`` setting. If more than one tag is associated
                    with a node, command line will be concatenated from all associated
                    tags, in alphabetic tag name order.
                  type: string
                name:
                  description: The new tag name. Because the name will be used in
                    urls, it should be short.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to create a
            tag.
      summary: Create a new tag
      tags:
      - Tags
  /tags/{name}/:
    delete:
      description: Deletes a tag by name.
      operationId: TagHandler_delete
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '204':
          description: '204'
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: Delete a tag
      tags:
      - Tag
    get:
      description: Returns a JSON object containing information about a specific tag.
      operationId: TagHandler_read
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the requested tag.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: Read a specific tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    put:
      description: Update elements of a given tag.
      operationId: TagHandler_update
      parameters:
      - description: The tag to update.
        in: path
        name: name
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                comment:
                  description: A description of what the the tag will be used for
                    in natural language.
                  type: string
                definition:
                  description: An XPATH query that is evaluated against the hardware_details
                    stored for all nodes (i.e. the output of ``lshw -xml``).
                  type: string
                name:
                  description: The new tag name. Because the name will be used in
                    urls, it should be short.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON tag object.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: Update a tag
      tags:
      - Tag
  /tags/{name}/op-devices:
    get:
      description: Get a JSON list containing device objects that match the given
        tag name.
      operationId: TagHandler_devices
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: List devices by tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /tags/{name}/op-machines:
    get:
      description: Get a JSON list containing machine objects that match the given
        tag name.
      operationId: TagHandler_machines
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: List machines by tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /tags/{name}/op-nodes:
    get:
      description: Get a JSON list containing node objects that match the given tag
        name.
      operationId: TagHandler_nodes
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: List nodes by tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /tags/{name}/op-rack_controllers:
    get:
      description: Get a JSON list containing rack-controller objects that match the
        given tag name.
      operationId: TagHandler_rack_controllers
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: List rack controllers by tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /tags/{name}/op-rebuild:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: 'Tells MAAS to rebuild the tag-to-node mappings.

        This is a maintenance operation and should not be necessary under normal circumstances.
        Adding nodes or updating a tag definition should automatically trigger the
        mapping rebuild.'
      operationId: TagHandler_rebuild
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: Trigger a tag-node mapping rebuild
      tags:
      - Tag
  /tags/{name}/op-region_controllers:
    get:
      description: Get a JSON list containing region-controller objects that match
        the given tag name.
      operationId: TagHandler_region_controllers
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
      summary: List region controllers by tag
      tags:
      - Tag
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
  /tags/{name}/op-update_nodes:
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    post:
      description: 'Add or remove nodes associated with the given tag.

        Note that you must supply either the ``add`` or ``remove`` parameter.'
      operationId: TagHandler_update_nodes
      parameters:
      - description: A tag name.
        in: path
        name: name
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                add:
                  description: The system_id to tag.
                  type: string
                definition:
                  description: If given, the definition (XPATH expression) will be
                    validated against the current definition of the tag. If the value
                    does not match, MAAS assumes the worker is out of date and will
                    drop the update.
                  type: string
                rack_controller:
                  description: The system ID of the rack controller that processed
                    the given tag initially. If not given, the requester must be a
                    MAAS admin. If given, the requester must be the rack controller.
                  type: string
                remove:
                  description: The system_id to untag.
                  type: string
              type: object
        required: true
      responses:
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions required to update the
            nodes.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The requested tag name is not found.
        '409':
          content:
            text/plain:
              schema:
                type: string
          description: The supplied definition doesn't match the current definition.
      summary: Update nodes associated with this tag
      tags:
      - Tag
  /users/:
    get:
      description: List users
      operationId: UsersHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of users.
      summary: List users
      tags:
      - Users
    post:
      description: 'Creates a MAAS user account.


        This is not safe: the password is sent in plaintext.  Avoid it for production,
        unless you are confident that you can prevent eavesdroppers from observing
        the request.'
      operationId: UsersHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                email:
                  description: Email address for the new user.
                  type: string
                is_superuser:
                  description: Whether the new user is to be an administrator. ('0'
                    == False, '1' == True)
                  type: boolean
                password:
                  description: Password for the new user.
                  type: string
                username:
                  description: Identifier-style username for the new user.
                  type: string
              required:
              - username
              - email
              - password
              - is_superuser
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the new user.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: Mandatory parameters are missing.
      summary: Create a MAAS user account
      tags:
      - Users
  /users/op-whoami:
    get:
      description: Returns the currently logged-in user.
      operationId: UsersHandler_whoami
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing information about the currently logged-in
            user.
      summary: Retrieve logged-in user
      tags:
      - Users
  /users/{username}/:
    delete:
      description: Deletes a given username.
      operationId: UserHandler_delete
      parameters:
      - description: The username to delete.
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '204':
          description: '204'
      summary: Delete a user
      tags:
      - User
    get:
      description: Retrieve a user's details.
      operationId: UserHandler_read
      parameters:
      - description: A username.
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing user information.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The given user was not found.
      summary: Retrieve user details
      tags:
      - User
    parameters:
    - in: path
      name: username
      required: true
      schema:
        type: string
  /version/:
    get:
      description: Read version and capabilities of this MAAS instance.
      operationId: VersionHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing MAAS version and capabilities information.
      summary: MAAS version information
      tags:
      - MAAS version
  /vm-clusters/:
    get:
      description: Get a listing of all VM Clusters
      operationId: VmClustersHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of VM Cluster objects.
      summary: List VM Clusters
      tags:
      - Virtual Machine Clusters
  /vm-clusters/{id}:
    delete:
      description: Deletes a VM cluster with the given ID.
      operationId: VmClusterHandler_delete
      parameters:
      - description: The VM cluster's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM cluster.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM cluster with that ID can be found.
      summary: Deletes a VM cluster
      tags:
      - Virtual Machine Cluster
    get:
      description: Read operations for the VM Cluster object A VM Cluster is identified
        by its id
      operationId: VmClusterHandler_read
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '''str'' object has no attribute ''has_model'''
      summary: VmClusterHandler read
      tags:
      - Virtual Machine Cluster
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: Update a specific VMCluster by ID.
      operationId: VmClusterHandler_update
      parameters:
      - description: The VMCluster's ID.
        in: path
        name: id
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: The VMCluster's name.
                  type: string
                pool:
                  description: The name of the resource pool associated with this
                    VM Cluster -- this change is propagated to VMHosts
                  type: string
                zone:
                  description: The VMCluster's zone.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON VMClister object.
        '403':
          description: 403 -- The current user does not have permission to update
            the VMCluster.
        '404':
          description: 404 -- The VMCluster's ID was not found.
      summary: Update VMCluster
      tags:
      - Virtual Machine Cluster
  /vm-hosts/:
    get:
      description: Get a listing of all VM hosts.
      operationId: VmHostsHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of VM host objects.
      summary: List VM hosts
      tags:
      - Virtual machine hosts
    post:
      description: Create or discover a new VM host.
      operationId: VmHostsHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                name:
                  description: The new VM host's name.
                  type: string
                pool:
                  description: The name of the resource pool the new VM host will
                    belong to. Machines composed from this VM host will be assigned
                    to this resource pool by default.
                  type: string
                power_address:
                  description: Address that gives MAAS access to the VM host power
                    control. For example, for virsh ``qemu+ssh://172.16.99.2/system``
                    For ``lxd``, this is just the address of the host.
                  type: string
                power_pass:
                  description: Password to use for power control of the VM host. Required
                    ``virsh`` VM hosts that do not have SSH set up for public-key
                    authentication and for ``lxd`` if the MAAS certificate is not
                    registered already in the LXD server.
                  type: string
                power_user:
                  description: Username to use for power control of the VM host. Required
                    for ``virsh`` VM hosts that do not have SSH set up for public-key
                    authentication.
                  type: string
                project:
                  description: For ``lxd`` VM hosts, the project that MAAS will manage.
                    If not provided, the ``default`` project will be used. If a nonexistent
                    name is given, a new project with that name will be created.
                  type: string
                tags:
                  description: A tag or list of tags ( comma delimited) to assign
                    to the new VM host.
                  type: string
                type:
                  description: 'The type of VM host to create: ``lxd`` or ``virsh``.'
                  type: string
                zone:
                  description: The new VM host's zone.
                  type: string
              required:
              - type
              - power_address
              - power_user
              - power_pass
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a VM host object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
        '503':
          content:
            text/plain:
              schema:
                type: string
          description: MAAS could not find or could not authenticate with the VM host.
      summary: Create a VM host
      tags:
      - Virtual machine hosts
  /vm-hosts/{id}/:
    delete:
      description: Deletes a VM host with the given ID.
      operationId: VmHostHandler_delete
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: '204'
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Deletes a VM host
      tags:
      - Virtual machine host
    get:
      description: 'Manage an individual VM host.


        A VM host is identified by its id.'
      operationId: VmHostHandler_read
      responses:
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: '''str'' object has no attribute ''has_model'''
      summary: VmHostHandler read
      tags:
      - Virtual machine host
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    put:
      description: 'Update a specific VM host by ID.


        Note: A VM host''s ''type'' cannot be updated. The VM host must be deleted
        and re-added to change the type.'
      operationId: VmHostHandler_update
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                cpu_over_commit_ratio:
                  description: CPU overcommit ratio (0-10)
                  type: integer
                default_macvlan_mode:
                  description: 'Default macvlan mode for VM hosts that use it: bridge,
                    passthru, private, vepa.'
                  type: string
                default_storage_pool:
                  description: Default KVM storage pool to use when the VM host has
                    storage pools.
                  type: string
                memory_over_commit_ratio:
                  description: CPU overcommit ratio (0-10)
                  type: integer
                name:
                  description: The VM host's name.
                  type: string
                pool:
                  description: The name of the resource pool associated with this
                    VM host -- composed machines will be assigned to this resource
                    pool by default.
                  type: string
                power_address:
                  description: Address for power control of the VM host.
                  type: string
                power_pass:
                  description: Password for access to power control of the VM host.
                  type: string
                tags:
                  description: Tag or tags (command separated) associated with the
                    VM host.
                  type: string
                zone:
                  description: The VM host's zone.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON VM host object.
        '403':
          description: 403 -- The current user does not have permission to update
            the VM host.
        '404':
          description: 404 -- The VM host's ID was not found.
      summary: Update a specific VM host
      tags:
      - Virtual machine host
  /vm-hosts/{id}/op-add_tag:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Adds a tag to a given VM host.
      operationId: VmHostHandler_add_tag
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to add.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Add a tag to a VM host
      tags:
      - Virtual machine host
  /vm-hosts/{id}/op-compose:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Compose a new machine from a VM host.
      operationId: VmHostHandler_compose
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                architecture:
                  description: The architecture of the new machine (e.g. amd64). This
                    must be an architecture the VM host supports.
                  type: string
                cores:
                  description: The minimum number of CPU cores.
                  type: integer
                cpu_speed:
                  description: The minimum CPU speed, specified in MHz.
                  type: integer
                domain:
                  description: The ID of the domain in which to put the newly composed
                    machine.
                  type: integer
                hostname:
                  description: The hostname of the newly composed machine.
                  type: string
                hugepages_backed:
                  description: Whether to request hugepages backing for the machine.
                  type: boolean
                interfaces:
                  description: 'A labeled constraint map associating constraint labels
                    with desired interface properties. MAAS will assign interfaces
                    that match the given interface properties. Format: ``label:key=value,key=value,...``
                    Keys: - ``id``: Matches an interface with the specific id - ``fabric``:
                    Matches an interface attached to the specified fabric. - ``fabric_class``:
                    Matches an interface attached to a fabric with the specified class.
                    - ``ip``: Matches an interface whose VLAN is on the subnet implied
                    by the given IP address, and allocates the specified IP address
                    for the machine on that interface (if it is available). - ``mode``:
                    Matches an interface with the specified mode. (Currently, the
                    only supported mode is "unconfigured".) - ``name``: Matches an
                    interface with the specified name. (For example, "eth0".) - ``hostname``:
                    Matches an interface attached to the node with the specified hostname.
                    - ``subnet``: Matches an interface attached to the specified subnet.
                    - ``space``: Matches an interface attached to the specified space.
                    - ``subnet_cidr``: Matches an interface attached to the specified
                    subnet CIDR. (For example, "192.168.0.0/24".) - ``type``: Matches
                    an interface of the specified type. (Valid types: "physical",
                    "vlan", "bond", "bridge", or "unknown".) - ``vlan``: Matches an
                    interface on the specified VLAN. - ``vid``: Matches an interface
                    on a VLAN with the specified VID. - ``tag``: Matches an interface
                    tagged with the specified tag.'
                  type: string
                memory:
                  description: The minimum amount of memory, specified in MiB (e.g.
                    2 MiB == 2*1024*1024).
                  type: integer
                pinned_cores:
                  description: List of host CPU cores to pin the VM to. If this is
                    passed, the "cores" parameter is ignored.
                  type: integer
                pool:
                  description: The ID of the pool in which to put the newly composed
                    machine.
                  type: integer
                storage:
                  description: A list of storage constraint identifiers in the form
                    ``label:size(tag,tag,...), label:size(tag,tag,...)``. For more
                    information please see the CLI VM host management page of the
                    official MAAS documentation.
                  type: string
                zone:
                  description: The ID of the zone in which to put the newly composed
                    machine.
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the new machine ID and resource URI.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Compose a virtual machine on the host.
      tags:
      - Virtual machine host
  /vm-hosts/{id}/op-parameters:
    get:
      description: 'This returns a VM host''s configuration parameters. For some types
        of VM host, this will include private information such as passwords and secret
        keys.


        Note: This method is reserved for admin users.'
      operationId: VmHostHandler_parameters
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing the VM host's configuration parameters.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Obtain VM host parameters
      tags:
      - Virtual machine host
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
  /vm-hosts/{id}/op-refresh:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Performs VM host discovery and updates all discovered information
        and discovered machines.
      operationId: VmHostHandler_refresh
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      responses:
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Refresh a VM host
      tags:
      - Virtual machine host
  /vm-hosts/{id}/op-remove_tag:
    parameters:
    - in: path
      name: id
      required: true
      schema:
        type: string
    post:
      description: Removes a given tag from a VM host.
      operationId: VmHostHandler_remove_tag
      parameters:
      - description: The VM host's ID.
        in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                tag:
                  description: The tag to add.
                  type: string
              required:
              - tag
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object.
        '403':
          content:
            text/plain:
              schema:
                type: string
          description: The user does not have the permissions to delete the VM host.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: No VM host with that ID can be found.
      summary: Remove a tag from a VM host
      tags:
      - Virtual machine host
  /zones/:
    get:
      description: 'Get a listing of all zones. Note that there is always at least
        one zone: default.'
      operationId: ZonesHandler_read
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing a list of zones.
      summary: ZonesHandler read
      tags:
      - Zones
    post:
      description: Creates a new zone.
      operationId: ZonesHandler_create
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A brief description of the new zone.
                  type: string
                name:
                  description: The new zone's name.
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing details about your new zone.
        '400':
          content:
            text/plain:
              schema:
                type: string
          description: The zone already exists
      summary: ZonesHandler create
      tags:
      - Zones
  /zones/{name}/:
    delete:
      description: Deletes a zone.
      operationId: ZoneHandler_delete
      parameters:
      - description: The zone to delete.
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: An empty string
        '204':
          content:
            text/plain:
              schema:
                type: string
          description: An empty string
      summary: ZoneHandler delete
      tags:
      - Zone
    get:
      description: Returns a named zone.
      operationId: ZoneHandler_read
      parameters:
      - description: A zone name
        in: path
        name: name
        required: true
        schema:
          type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing zone information
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: The zone name is not found.
      summary: ZoneHandler read
      tags:
      - Zone
    parameters:
    - in: path
      name: name
      required: true
      schema:
        type: string
    put:
      description: 'Updates a zone''s name or description.


        Note that only ''name'' and ''description'' parameters are honored. Others,
        such as ''resource-uri'' or ''id'' will be ignored.'
      operationId: ZoneHandler_update
      parameters:
      - description: The zone to update.
        in: path
        name: name
        required: true
        schema:
          type: object
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              properties:
                description:
                  description: A brief description of the new zone.
                  type: string
                name:
                  description: The zone's new name.
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: A JSON object containing details about your new zone.
        '404':
          content:
            text/plain:
              schema:
                type: string
          description: Zone not found
      summary: ZoneHandler update
      tags:
      - Zone
